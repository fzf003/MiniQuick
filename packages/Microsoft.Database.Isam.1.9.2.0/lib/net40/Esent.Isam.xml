<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Esent.Isam</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Database.Isam.BoundCriteria">
            <summary>
            Choices for Cursor.FindRecordsBetween
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.BoundCriteria.Inclusive">
            <summary>
            Whether the bounds are included.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.BoundCriteria.Exclusive">
            <summary>
            Whether the bounds are excluded.
            </summary>
        </member>
        <member name="T:Microsoft.Database.Isam.ColumnAccessor">
            <summary>
            Wraps a JET_TABLEID with indexed accessors
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnAccessor.isamSession">
            <summary>
            The underlying session.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnAccessor.tableid">
            <summary>
            The underlying tableid.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnAccessor.grbit">
            <summary>
            The grbits to use for retrieving the column.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnAccessor.cursor">
            <summary>
            The underlying cursor.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnAccessor.updateID">
            <summary>
            The Update Identifier.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnAccessor.#ctor(Microsoft.Database.Isam.Cursor,Microsoft.Database.Isam.IsamSession,Microsoft.Isam.Esent.Interop.JET_TABLEID,Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.ColumnAccessor"/> class.
            </summary>
            <param name="cursor">The cursor.</param>
            <param name="isamSession">The session.</param>
            <param name="tableid">The tableid.</param>
            <param name="grbit">The grbit.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnAccessor.SizeOf(System.String,System.Int32)">
            <summary>
            Calculates the size of the specified multivalue stored in the specified column.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="index">The index.</param>
            <returns>Returns the size of the specified multivalue stored in the specified column.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnAccessor.SizeOf(System.String)">
            <summary>
            Calculates the size of the specified column.
            </summary>
            <param name="columnName">Name of the column.</param>
            <returns>Returns the size of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnAccessor.SizeOf(Microsoft.Database.Isam.Columnid,System.Int32)">
            <summary>
            Calculates the size of the specified multivalue stored in the specified column.
            </summary>
            <param name="columnid">The columnid.</param>
            <param name="index">The index.</param>
            <returns>Returns the size of the specified multivalue stored in the specified column.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnAccessor.SizeOf(Microsoft.Database.Isam.Columnid)">
            <summary>
            Calculates the size of the specified column.
            </summary>
            <param name="columnid">The columnid.</param>
            <returns>Returns the size of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnAccessor.GetEnumerator">
            <summary>
            Fetches an enumerator containing all the field values in the record.
            </summary>
            <returns>
            Returns an enumerator containing all the field values in the record.
            </returns>
            <remarks>
            This is the type safe version that may not work in other CLR
            languages.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnAccessor.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Fetches an enumerator containing all the field values in the record
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <remarks>
            This is the standard version that will work with other CLR
            languages.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnAccessor.RetrieveColumn(System.String,System.Int32)">
            <summary>
            Retrieves the column.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="index">The index.</param>
            <returns>The value stored within.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnAccessor.RetrieveColumn(Microsoft.Database.Isam.ColumnDefinition,System.Int32)">
            <summary>
            Retrieves the column.
            </summary>
            <param name="columnDefinition">The column definition.</param>
            <param name="index">The index.</param>
            <returns>The value stored within.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnAccessor.SetColumn(System.String,System.Int32,System.Object)">
            <summary>
            Sets the column.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="index">The index.</param>
            <param name="obj">The object.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnAccessor.SetColumn(Microsoft.Database.Isam.ColumnDefinition,System.Int32,System.Object)">
            <summary>
            Sets the column.
            </summary>
            <param name="columnDefinition">The column definition.</param>
            <param name="index">The index.</param>
            <param name="obj">The object.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnAccessor.RetrieveColumn(Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_coltyp,System.Boolean,System.Int32)">
            <summary>
            Retrieves the column.
            </summary>
            <param name="columnid">The columnid.</param>
            <param name="coltyp">The coltyp.</param>
            <param name="isAscii">Whether a textual column is Ascii.</param>
            <param name="index">The index.</param>
            <returns>The value stored within.</returns>
            <remarks>
            Itags start at 1, so we add 1 to the index
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnAccessor.SetColumn(Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_coltyp,System.Boolean,System.Int32,System.Object)">
            <summary>
            Sets the column.
            </summary>
            <param name="columnid">The columnid.</param>
            <param name="coltyp">The coltyp.</param>
            <param name="isAscii">Whether a textual column is Ascii.</param>
            <param name="index">The index.</param>
            <param name="obj">The object.</param>
            <exception cref="T:System.InvalidOperationException">You may only update fields through Cursor.EditRecord.</exception>
            <remarks>
            Itags start at 1, so we add 1 to the index
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnAccessor.UpdateID">
            <summary>
            Gets the update identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnAccessor.Item(System.String)">
            <summary>
            Accessor for itag 1 of a column, converted to/from an object
            </summary>
            <value>
            The <see cref="T:System.Object"/>.
            </value>
            <param name="columnName">Name of the column.</param>
            <returns>The value stored within.</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnAccessor.Item(System.String,System.Int32)">
            <summary>
            Accessor for any itag of a column, converted to/from an object
            </summary>
            <value>
            The <see cref="T:System.Object"/>.
            </value>
            <param name="columnName">Name of the column.</param>
            <param name="index">The index.</param>
            <returns>The value stored within.</returns>
            <remarks>
            The index argument is 0-based, we add 1 to get the itag
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnAccessor.Item(Microsoft.Database.Isam.Columnid)">
            <summary>
            Accessor for itag 1 of a column, converted to/from an object
            </summary>
            <value>
            The <see cref="T:System.Object"/>.
            </value>
            <param name="columnid">The columnid.</param>
            <returns>The value stored within.</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnAccessor.Item(Microsoft.Database.Isam.Columnid,System.Int32)">
            <summary>
            Accessor for any itag of a column, converted to/from an object
            </summary>
            <value>
            The <see cref="T:System.Object"/>.
            </value>
            <param name="columnid">The columnid.</param>
            <param name="index">The index.</param>
            <returns>The value stored within.</returns>
            <remarks>
            The index argument is 0-based, we add 1 to get the itag
            </remarks>
        </member>
        <member name="T:Microsoft.Database.Isam.ColumnCollection">
            <summary>
            Contains the columns defined in the table.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnCollection.database">
            <summary>
            The database
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnCollection.tableName">
            <summary>
            The table name
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnCollection.cachedColumnDefinition">
            <summary>
            The cached column definition
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnCollection.columnDefinition">
            <summary>
            The column definition
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnCollection.columnUpdateID">
            <summary>
            The column update identifier
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnCollection.readOnly">
            <summary>
            Whether the collection is read-only.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.ColumnCollection"/> class. 
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.#ctor(Microsoft.Database.Isam.Database,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.ColumnCollection"/> class.
            </summary>
            <param name="database">The database.</param>
            <param name="tableName">Name of the table.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.GetEnumerator">
            <summary>
            Fetches an enumerator containing all the columns in this table.
            </summary>
            <returns>An enumerator containing all the columns in this table.</returns>
            <remarks>
            This is the type safe version that may not work in other CLR
            languages.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.Add(Microsoft.Database.Isam.ColumnDefinition)">
            <summary>
            Adds the specified column definition.
            </summary>
            <param name="columnDefinition">The column definition.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.Contains(System.String)">
            <summary>
            Determines if the table contains a column with the given name
            </summary>
            <param name="columnName">Name of the column.</param>
            <returns>Whether the specified column exists in the collection.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.Contains(Microsoft.Database.Isam.Columnid)">
            <summary>
            Determines if the table contains a column with the given columnid
            </summary>
            <param name="columnid">The columnid.</param>
            <returns>Whether the specified column exists in the collection.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.Remove(System.String)">
            <summary>
            Removes the specified column name.
            </summary>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.Remove(Microsoft.Database.Isam.Columnid)">
            <summary>
            Removes the specified columnid.
            </summary>
            <param name="columnid">The columnid.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Fetches an enumerator containing all the columns in this table
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <remarks>
            This is the standard version that will work with other CLR
            languages.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.OnClear">
            <summary>
            Performs additional custom processes before clearing the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.OnInsert(System.Object,System.Object)">
            <summary>
            Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
            <param name="key">The key of the element to insert.</param>
            <param name="value">The value of the element to insert.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.OnRemove(System.Object,System.Object)">
            <summary>
            Performs additional custom processes before removing an element from the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <param name="value">The value of the element to remove.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.OnSet(System.Object,System.Object,System.Object)">
            <summary>
            Performs additional custom processes before setting a value in the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
            <param name="key">The key of the element to locate.</param>
            <param name="oldValue">The old value of the element associated with <paramref name="key" />.</param>
            <param name="newValue">The new value of the element associated with <paramref name="key" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.OnValidate(System.Object,System.Object)">
            <summary>
            Performs additional custom processes when validating the element with the specified key and value.
            </summary>
            <param name="key">The key of the element to validate.</param>
            <param name="value">The value of the element to validate.</param>
            <exception cref="T:System.ArgumentException">
            key must be of type System.String;key
            or
            value must be of type ColumnDefinition;value
            or
            key must match value.Name;key
            </exception>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnCollection.CheckReadOnly">
            <summary>
            Checks the read only.
            </summary>
            <exception cref="T:System.NotSupportedException">this index collection cannot be changed</exception>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object has a fixed size.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IDictionary" /> object is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnCollection.Names">
            <summary>
            Gets the names.
            </summary>
            <value>
            The names.
            </value>
            <exception cref="T:System.InvalidOperationException">the names of the columns in this column collection cannot be enumerated in this manner when accessing the table definition of an existing table</exception>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnCollection.ReadOnly">
            <summary>
            Sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnCollection.Item(System.String)">
            <summary>
            Fetches the Column Definition for the specified column name.
            </summary>
            <value>
            The <see cref="T:Microsoft.Database.Isam.ColumnDefinition"/> for the specifed column name.
            </value>
            <param name="columnName">Name of the column.</param>
            <returns>The <see cref="T:Microsoft.Database.Isam.ColumnDefinition"/> for the specified column name.</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnCollection.Item(Microsoft.Database.Isam.Columnid)">
            <summary>
            Fetches the Column Definition for the specified columnid.
            </summary>
            <value>
            The <see cref="T:Microsoft.Database.Isam.ColumnDefinition"/> for the specifed column identifier
            </value>
            <param name="columnid">The columnid.</param>
            <returns>The <see cref="T:Microsoft.Database.Isam.ColumnDefinition"/> for the specified column identifier.</returns>
        </member>
        <member name="T:Microsoft.Database.Isam.ColumnDefinition">
            <summary>
            A Column Definition contains the schema for a single column.  It can be
            used to explore the schema for an existing column and to create the
            definition for a new column.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnDefinition.columnid">
            <summary>
            The columnid
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnDefinition.name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnDefinition.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnDefinition.flags">
            <summary>
            The flags
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnDefinition.maxLength">
            <summary>
            The maximum length
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnDefinition.defaultValue">
            <summary>
            The default value
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnDefinition.readOnly">
            <summary>
            The read only
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnDefinition.#ctor(System.String,System.Type,Microsoft.Database.Isam.ColumnFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.ColumnDefinition"/> class. 
            For use when defining a new column.
            </summary>
            <param name="name">
            the name of the column to be defined
            </param>
            <param name="type">
            the type of the column to be defined
            </param>
            <param name="flags">
            the flags for the column to be defined
            </param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnDefinition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.ColumnDefinition"/> class. 
            For use when defining a new column.
            </summary>
            <param name="name">
            the name of the column to be defined
            </param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.ColumnDefinition"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnDefinition.#ctor(Microsoft.Database.Isam.Columnid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.ColumnDefinition"/> class.
            </summary>
            <param name="columnid">The columnid.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnDefinition.Load(Microsoft.Database.Isam.Database,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNLIST)">
            <summary>
            Creates a <see cref="T:Microsoft.Database.Isam.ColumnDefinition"/> object representing the column passed in by <paramref name="columnList"/>.
            </summary>
            <param name="database">The database.</param>
            <param name="tableName">Name of the table.</param>
            <param name="columnList">The <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNLIST"/> object that represents the row in
            the temptable for this particular column.</param>
            <returns>
            A <see cref="T:Microsoft.Database.Isam.ColumnDefinition"/> object based on the current row in the temptable
            represented by <paramref name="columnList"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnDefinition.Load(Microsoft.Database.Isam.Database,System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNBASE)">
            <summary>
            Creates a <see cref="T:Microsoft.Database.Isam.ColumnDefinition"/> object representing the column passed in by <paramref name="columnBase"/>.
            </summary>
            <param name="database">The database.</param>
            <param name="tableName">Name of the table.</param>
            <param name="columnBase">The <see cref="T:Microsoft.Isam.Esent.Interop.JET_COLUMNBASE"/> object that represents this particular column.</param>
            <returns>
            A <see cref="T:Microsoft.Database.Isam.ColumnDefinition"/> object based on the <paramref name="columnBase"/> object.
            </returns>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnDefinition.ColumnFlagsFromGrbits(Microsoft.Isam.Esent.Interop.ColumndefGrbit)">
            <summary>
            Converts <see cref="T:Microsoft.Isam.Esent.Interop.ColumndefGrbit"/> to <see cref="T:Microsoft.Database.Isam.ColumnFlags"/>.
            </summary>
            <param name="grbitColumn">The grbit to convert.</param>
            <returns>A <see cref="T:Microsoft.Database.Isam.ColumnFlags"/> value equivalent to <paramref name="grbitColumn"/>.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnDefinition.CheckReadOnly">
            <summary>
            Checks the read only status.
            </summary>
            <exception cref="T:System.NotSupportedException">this column definition cannot be changed</exception>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnDefinition.IsAscii">
            <summary>
            Gets a value indicating whether this is a text column, whether it stores Ascii data. If false, text columns store Unicode data.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnDefinition.Columnid">
            <summary>
            Gets the column ID of the column
            </summary>
            <remarks>
            The column ID is undefined if this column definition will be used
            to define a new column
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnDefinition.Name">
            <summary>
            Gets the name of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnDefinition.Type">
            <summary>
            Gets or sets the type of the column.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnDefinition.Flags">
            <summary>
            Gets or sets the column's flags.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnDefinition.MaxLength">
            <summary>
            Gets or sets the max length of the column in bytes.
            </summary>
            <remarks>
            The max length of a fixed column need not be specified when
            defining a new column.
            <para>
            A max length of zero for a variable length column is the same as
            giving that column the largest possible max length.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnDefinition.DefaultValue">
            <summary>
            Gets or sets the default value of the column.
            </summary>
            <remarks>
            If the field corresponding to this column in a given record is
            never set then the value of that field will be the default value of
            the column.
            <para>
            The size of the default value is currently limited to 255 bytes
            by the ISAM.  It is also not possible to specify a zero length
            default value.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnDefinition.IsReadOnly">
            <summary>
            Gets a value indicating whether this column definition cannot be changed.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnDefinition.ReadOnly">
            <summary>
            Sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Microsoft.Database.Isam.ColumnEnumerator">
            <summary>
            Enumerates the columns in a given table.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnEnumerator.database">
            <summary>
            The database
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnEnumerator.tableName">
            <summary>
            The table name
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnEnumerator.enumerator">
            <summary>
            The enumerator
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnEnumerator.columnList">
            <summary>
            The column list
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnEnumerator.cleanup">
            <summary>
            The cleanup
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnEnumerator.moved">
            <summary>
            The moved
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnEnumerator.current">
            <summary>
            The current
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnEnumerator.columnDefinition">
            <summary>
            The column definition
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnEnumerator.columnUpdateID">
            <summary>
            The column update identifier
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnEnumerator.#ctor(Microsoft.Database.Isam.Database,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.ColumnEnumerator"/> class.
            </summary>
            <param name="database">The database.</param>
            <param name="tableName">Name of the table.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnEnumerator.#ctor(System.Collections.IDictionaryEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.ColumnEnumerator"/> class.
            </summary>
            <param name="enumerator">The enumerator.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnEnumerator.Finalize">
            <summary>
            Finalizes an instance of the ColumnEnumerator class
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.ColumnEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>The current element in the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            after last column in table
            or
            before first column in table
            </exception>
            <remarks>
            This is the type safe version that may not work in other CLR
            languages.
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.ColumnEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>The current element in the collection.</returns>
            <remarks>
            This is the standard version that will work with other CLR
            languages.
            </remarks>
        </member>
        <member name="T:Microsoft.Database.Isam.ColumnFlags">
            <summary>
            Column flags enumeration
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnFlags.None">
            <summary>
            Default options.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnFlags.Fixed">
            <summary>
            The column will be fixed. It will always use the same amount of space in a row,
            regardless of how much data is being stored in the column. Fixed
            cannot be used with Tagged. This bit cannot be used with long values (i.e. Text
            and Binary longer than 255 bytes).
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnFlags.Variable">
            <summary>
            A variable sized column, cannot be bigger than 255 bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnFlags.Sparse">
            <summary>
            Sparse columns take no space in the record unless set (unlike Fixed
            or Variable columns) and can be up to 2GB in length. Can't be used with
            <see cref="F:Microsoft.Database.Isam.ColumnFlags.Fixed"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnFlags.NonNull">
            <summary>
            This column cannot be set to NULL
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnFlags.Version">
            <summary>
            This column will contain a version number maintained by the ISAM
            that will be incremented on every update of the record.
            This option can only be applied to integer columns.
            This option can't be used with <see cref="F:Microsoft.Database.Isam.ColumnFlags.AutoIncrement"/>,
            <see cref="F:Microsoft.Database.Isam.ColumnFlags.EscrowUpdate"/>, or <see cref="F:Microsoft.Database.Isam.ColumnFlags.Sparse"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnFlags.AutoIncrement">
            <summary>
            The column will automatically be incremented. The number is an increasing number, and
            is guaranteed to be unique within a table. The numbers, however, might not be continuous.
            For example, if five rows are inserted into a table, the "autoincrement" column could
            contain the values { 1, 2, 6, 7, 8 }. This bit can only be used on columns of type
            integer types (int and long).
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnFlags.Updatable">
            <summary>
            This column can be updated by the application (read-only flag, returned
            by GetInformation-style calls only).
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnFlags.MultiValued">
            <summary>
            The column can be multi-valued.
            A multi-valued column can have zero, one, or more values
            associated with it. The various values in a multi-valued column are identified by a number
            called the itagSequence member.
            Multi-valued columns must be tagged columns; that is, they cannot be fixed-length or
            variable-length columns.
            All multi-
            valued columns are also sparse columns.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnFlags.EscrowUpdate">
            <summary>
             Specifies that a column is an escrow update column. An escrow update column can be
             updated concurrently by different sessions with JetEscrowUpdate and will maintain
             transactional consistency. An escrow update column must also meet the following conditions:
             An escrow update column can be created only when the table is empty.
             An escrow update column must be of type JET_coltypLong.
             An escrow update column must have a default value.
             JET_bitColumnEscrowUpdate cannot be used in conjunction with <see cref="F:Microsoft.Database.Isam.ColumnFlags.Sparse"/>,
             <see cref="F:Microsoft.Database.Isam.ColumnFlags.Version"/>, or <see cref="F:Microsoft.Database.Isam.ColumnFlags.AutoIncrement"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnFlags.Finalize">
            <summary>
            When the escrow-update column reaches a value of zero, the callback function will be invoked.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnFlags.UserDefinedDefault">
            <summary>
            The default value for a column will be provided by a callback function. A column that
            has a user-defined default must be a tagged column.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ColumnFlags.DeleteOnZero">
            <summary>
            This is a finalizable column (delete record if escrow value equals 0).
            </summary>
        </member>
        <member name="T:Microsoft.Database.Isam.Columnid">
            <summary>
            Identifies a column in a table
            </summary>
            <remarks>
            A Columnid contains the name of a column and its internal identifier.
            A Columnid also encodes the type of the column which is used for conversions to and from CLR objects.
            Retrieving an column by columnid is more efficient than retrieving a column by name, as the name to
            columnid and type lookup can be expensive
            </remarks>
        </member>
        <member name="F:Microsoft.Database.Isam.Columnid.columnid">
            <summary>
            The columnid
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Columnid.coltyp">
            <summary>
            The column type of this column.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Columnid.name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Columnid.type">
            <summary>
            The CLR type that closest represents the data stored in the database.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Columnid.isAscii">
            <summary>
            Whether the column contains ASCII data (text columns only).
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Columnid.#ctor(Microsoft.Isam.Esent.Interop.JET_COLUMNBASE)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.Columnid"/> class.
            </summary>
            <param name="columnbase">The column identifier.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.Columnid.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_COLUMNID,Microsoft.Isam.Esent.Interop.JET_coltyp,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.Columnid"/> class.
            </summary>
            <param name="name">The column name.</param>
            <param name="columnid">The column identifier.</param>
            <param name="coltyp">The column type.</param>
            <param name="isAscii">If it's a text column, whether the data is ASCII or Unicode.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.Columnid.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Microsoft.Database.Isam.Columnid.IsAscii">
            <summary>
            Gets a value indicating whether the column contains ASCII data (text columns only).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.Columnid.Name">
            <summary>
            Gets the name of the column
            </summary>
            <remarks>
            A column name is only unique in the context of a specific table.
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.Columnid.Type">
            <summary>
            Gets the type of the column.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.Columnid.InteropColumnid">
            <summary>
            Gets the interop columnid.
            </summary>
            <value>
            The interop columnid.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.Columnid.Coltyp">
            <summary>
            Gets the underlying ESE <see cref="T:Microsoft.Isam.Esent.Interop.JET_coltyp"/> of the column.
            </summary>
        </member>
        <member name="T:Microsoft.Database.Isam.ConditionalColumn">
            <summary>
            A Conditional Column is a column used to determine the visibility of a
            record in an index.  This object can be used to explore the schema of
            an existing index and to create the definition of a new index.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ConditionalColumn.columnid">
            <summary>
            The columnid
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ConditionalColumn.name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ConditionalColumn.mustBeNull">
            <summary>
            The must be null
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.ConditionalColumn.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.ConditionalColumn"/> class. 
            For use when defining a new conditional
            column in an index.
            </summary>
            <param name="name">
            The name of the column in the table to be used for this conditional column.
            </param>
            <param name="mustBeNull">
            True if the column must be null for the record to be visible in the index,
            false if the column must be non-null for the record to be visible in the index.
            </param>
        </member>
        <member name="M:Microsoft.Database.Isam.ConditionalColumn.#ctor(Microsoft.Database.Isam.Columnid,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.ConditionalColumn"/> class.
            </summary>
            <param name="columnid">The columnid.</param>
            <param name="mustBeNull">if set to <c>true</c> [must be null].</param>
        </member>
        <member name="P:Microsoft.Database.Isam.ConditionalColumn.Columnid">
            <summary>
            Gets the column ID of the column used for this conditional column
            </summary>
            <remarks>
            The column ID is undefined if this conditional column will be used
            to define a new index
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.ConditionalColumn.Name">
            <summary>
            Gets or sets the name of the column used for this conditional column
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.ConditionalColumn.Type">
            <summary>
            Gets the type of the column used for this conditional column
            </summary>
            <remarks>
            The column type is undefined if this conditional column will be
            used to define a new index
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.ConditionalColumn.MustBeNull">
            <summary>
            Gets or sets a value indicating whether the column must be null for the record to be visible in the index.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.ConditionalColumn.MustBeNonNull">
            <summary>
            Gets or sets a value indicating whether the column must be non-null for the record to be visible in the index.
            </summary>
        </member>
        <member name="T:Microsoft.Database.Isam.ConditionalColumnCollection">
            <summary>
            Holds the condtional columns associated with a <see cref="T:Microsoft.Database.Isam.IndexDefinition"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.ConditionalColumnCollection.readOnly">
            <summary>
            The read only
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.ConditionalColumnCollection.Add(Microsoft.Database.Isam.ConditionalColumn)">
            <summary>
            Adds the specified conditional column.
            </summary>
            <param name="conditionalColumn">The conditional column.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ConditionalColumnCollection.IndexOf(Microsoft.Database.Isam.ConditionalColumn)">
            <summary>
            Returns the index of the specified column.
            </summary>
            <param name="conditionalColumn">The conditional column.</param>
            <returns>
            The index of the specified column.
            </returns>
        </member>
        <member name="M:Microsoft.Database.Isam.ConditionalColumnCollection.Insert(System.Int32,Microsoft.Database.Isam.ConditionalColumn)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="conditionalColumn">The conditional column.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ConditionalColumnCollection.Remove(Microsoft.Database.Isam.ConditionalColumn)">
            <summary>
            Removes the specified conditional column.
            </summary>
            <param name="conditionalColumn">The conditional column.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ConditionalColumnCollection.Contains(Microsoft.Database.Isam.ConditionalColumn)">
            <summary>
            Returns whether the specified column exists in the collection.
            </summary>
            <param name="conditionalColumn">The conditional column.</param>
            <returns>Whether the specified column exists in the collection.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.ConditionalColumnCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.ConditionalColumnCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which to insert <paramref name="value" />.</param>
            <param name="value">The new value of the element at <paramref name="index" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ConditionalColumnCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes when removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
            <param name="value">The value of the element to remove from <paramref name="index" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ConditionalColumnCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="oldValue" /> can be found.</param>
            <param name="oldValue">The value to replace with <paramref name="newValue" />.</param>
            <param name="newValue">The new value of the element at <paramref name="index" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.ConditionalColumnCollection.OnValidate(System.Object)">
            <summary>
            Performs additional custom processes when validating a value.
            </summary>
            <param name="value">The object to validate.</param>
            <exception cref="T:System.ArgumentException">value must be of type ConditionalColumn;value</exception>
        </member>
        <member name="M:Microsoft.Database.Isam.ConditionalColumnCollection.CheckReadOnly">
            <summary>
            Checks the read only.
            </summary>
            <exception cref="T:System.NotSupportedException">this conditional column collection cannot be changed</exception>
        </member>
        <member name="P:Microsoft.Database.Isam.ConditionalColumnCollection.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.ConditionalColumnCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>
            Returns the element at the specified index.
            </returns>
        </member>
        <member name="T:Microsoft.Database.Isam.Converter">
            <summary>
            Convert an array of Bytes to/from a CLR object, given the type of the underlying column
            </summary>
            <remarks>
            The Interop layer operates with Byte arrays. The Converter class provides methods to convert
            an array of bytes retrieved from the Interop layer into a CLR object and to convert a CLR
            object into an array of bytes.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Converter.BytesFromObject(Microsoft.Isam.Esent.Interop.JET_coltyp,System.Boolean,System.Object)">
            <summary>
            Given a column type and an object, convert the object to an array of bytes
            </summary>
            <remarks>
            This method uses System.Convert and System.BitConverter to do automatic type conversion (e.g. String -&gt; Boolean)
            </remarks>
            <param name="type">The type of the database column that this object is to be stored in</param>
            <param name="isASCII">For text columns, is the column an ASCII column. Ignored for other types</param>
            <param name="o">The object to be converted</param>
            <returns>An array of bytes representing the object</returns>
            <exception cref="T:System.InvalidCastException">This conversion is not supported</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Unknown column type</exception>
        </member>
        <member name="M:Microsoft.Database.Isam.Converter.ObjectFromBytes(Microsoft.Isam.Esent.Interop.JET_coltyp,System.Boolean,System.Byte[])">
            <summary>
            Given a column type and a Byte array, convert the bytes into a CLR object
            </summary>
            <remarks>
            This method uses System.BitConverter to do the conversion
            </remarks>
            <param name="type">The type of the database column that this bytes were retrieved from</param>
            <param name="isASCII">For text columns, is the column an ASCII column. Ignored for other types</param>
            <param name="value">The bytes to be converted</param>
            <returns>An Object constructed from the bytes or DBNull for a null value</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Unknown column type or incorrect Byte array size</exception>
        </member>
        <member name="M:Microsoft.Database.Isam.Converter.UnicodeFlagsFromCompareOptions(System.Globalization.CompareOptions)">
            <summary>
            Converts from <see cref="T:System.Globalization.CompareOptions"/> to <see cref="T:Microsoft.Database.Isam.UnicodeIndexFlags"/>.
            </summary>
            <param name="options">The value to convert.</param>
            <returns>A <see cref="T:Microsoft.Database.Isam.UnicodeIndexFlags"/> value equivalent to <paramref name="options"/>.</returns>
            <exception cref="T:System.ArgumentException">CompareOptions.Ordinal is not supported;compareOptions</exception>
        </member>
        <member name="M:Microsoft.Database.Isam.Converter.MapFlagsFromUnicodeIndexFlags(Microsoft.Database.Isam.UnicodeIndexFlags)">
            <summary>
            Converts unicodeIndexFlags to a ulong, suitable for dwMapFlags.
            </summary>
            <param name="unicodeIndexFlags">A UnicodeIndexFlags value.</param>
            <returns>A value suitable for calling by LCMapString.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.Converter.ColumndefGrbitFromColumnFlags(Microsoft.Database.Isam.ColumnFlags)">
            <summary>
            Converts <see cref="T:Microsoft.Database.Isam.ColumnFlags"/> to a <see cref="T:Microsoft.Isam.Esent.Interop.ColumndefGrbit"/>, suitable for ESE function calls.
            </summary>
            <param name="columnFlags">A <see cref="T:Microsoft.Database.Isam.ColumnFlags"/> value.</param>
            <returns>A ColumndefGrbit suitable for function calls.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.Converter.IsCompareOptionSet(System.Globalization.CompareOptions,System.Globalization.CompareOptions)">
            <summary>
            Determines whether all of the the specified options in <paramref name="optionsMask"/>
            are set in <paramref name="optionsToTest"/>.
            </summary>
            <param name="optionsToTest">The value to test.</param>
            <param name="optionsMask">The optionsMask.</param>
            <returns>
            Whether all of the the specified options in <paramref name="optionsMask"/>
            </returns>
        </member>
        <member name="T:Microsoft.Database.Isam.Cursor">
            <summary>
            A cursor represents a location in a specific table and can be used to
            read and update the record at that position.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.isamSession">
            <summary>
            The session
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.database">
            <summary>
            The database
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.tableName">
            <summary>
            The table name
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.tableid">
            <summary>
            The tableid
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.isSort">
            <summary>
            The is sort
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.isSortOrPreSort">
            <summary>
            The is sort or pre sort
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.isTempTable">
            <summary>
            The is temporary table
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.cleanup">
            <summary>
            The cleanup
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.disposed">
            <summary>
            The disposed
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.keyStart">
            <summary>
            The key start
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.grbitSeekStart">
            <summary>
            The grbit seek start
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.grbitRangeStart">
            <summary>
            The grbit range start
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.keyEnd">
            <summary>
            The key end
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.grbitSeekEnd">
            <summary>
            The grbit seek end
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.grbitRangeEnd">
            <summary>
            The grbit range end
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.moveNext">
            <summary>
            The move next
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.movePrev">
            <summary>
            The move previous
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.outOfRange">
            <summary>
            The out of range
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.updating">
            <summary>
            The updating
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.record">
            <summary>
            The record
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.editRecord">
            <summary>
            The edit record
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.indexRecord">
            <summary>
            The index record
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.tableDefinition">
            <summary>
            The table definition
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.tableUpdateID">
            <summary>
            The table update identifier
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.indexDefinition">
            <summary>
            The index definition
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.indexUpdateID">
            <summary>
            The index update identifier
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.fields">
            <summary>
            The fields
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.transactionID">
            <summary>
            The transaction identifier
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.updateID">
            <summary>
            The update identifier
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.inInsertMode">
            <summary>
            The in insert mode
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.inRetrieveMode">
            <summary>
            The in retrieve mode
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Cursor.onBeforeFirst">
            <summary>
            The on before first
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.#ctor(Microsoft.Database.Isam.IsamSession,Microsoft.Database.Isam.Database,System.String,Microsoft.Isam.Esent.Interop.OpenTableGrbit)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.Cursor"/> class.
            </summary>
            <param name="isamSession">The session.</param>
            <param name="database">The database.</param>
            <param name="tableName">Name of the table.</param>
            <param name="grbit">The grbit.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.#ctor(Microsoft.Database.Isam.IsamSession,Microsoft.Database.Isam.TemporaryDatabase,System.String,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.Cursor"/> class.
            </summary>
            <param name="isamSession">The session.</param>
            <param name="database">The database.</param>
            <param name="tableName">Name of the table.</param>
            <param name="tableid">The tableid.</param>
            <param name="inInsertMode">if set to <c>true</c> [in insert mode].</param>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.Finalize">
            <summary>
            Finalizes an instance of the Cursor class
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.MoveNext">
            <summary>
            Move the cursor to the next record on the current index
            </summary>
            <returns>true if the cursor ends up on a record, false if the cursor is beyond the end of the index</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.MovePrevious">
            <summary>
            Move the cursor to the previous record on the current index
            </summary>
            <returns>true if the cursor ends up on a record, false if the cursor is beyond the start of the index</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.Move(System.Int32)">
            <summary>
            Move the cursor by the specified offset on the current index
            </summary>
            <param name="rows">A signed number of records to skip.  Positive numbers will cause the cursor to move toward the end of the current index.  Negative numbers will cause the cursor to move toward the start of the current index.</param>
            <returns>true if the cursor ends up on a record, false if the cursor is beyond the start or end of the index</returns>
            <remarks>
            Moving by an offset of zero is allowed and can be used to test if
            the cursor is currently on a record.  It will also force any cached
            data for the current record to be refreshed.
            <para>
            Large offsets used on large tables may cause this method to take
            quite some time to complete.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.MoveBeforeFirst">
            <summary>
            Move the cursor to before the first record on the current index
            </summary>
            <remarks>
            This is a logical position, such that calling MoveNext() will leave the cursor
            on the first record in the table. Trying to retrieve column values when the cursor
            is before the first record is invalid.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.MoveAfterLast">
            <summary>
            Move the cursor to after the last record on the current index
            </summary>
            <remarks>
            This is a logical position, such that calling MovePrevious() will leave the cursor
            on the last record in the table. Trying to retrieve column values when the cursor
            is after the last record is invalid.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.SetCurrentIndex(System.String)">
            <summary>
            Set the current index of the cursor
            </summary>
            <param name="indexName">The name of the index on the table for this cursor</param>
            <remarks>
            This will affect the order records are traversed by the MoveNext,
            MovePrevious and Move methods. The cursor will be positioned before
            the first record on the index.
            <para>
            As a side effect, any restriction in effect will be cleared.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.MoveToIndex(System.String)">
            <summary>
            Set the current index of the cursor
            </summary>
            <param name="indexName">The name of the index on the table for this cursor</param>
            <remarks>
            This will affect the order records are traversed by the MoveNext,
            MovePrevious and Move methods.  The cursor will be positioned on
            the new index at the first entry corresponding to the same record
            for the entry in the old index.  If no such entry exists because
            that record does not have an entry in the new index then the
            operation will fail with EsentNoCurrentRecordException.
            <para>
            As a side effect, any restriction in effect will be cleared.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.GotoKey(Microsoft.Database.Isam.Key)">
            <summary>
            Position the cursor at the specified key on the current index
            </summary>
            <param name="key">The full key for the desired record on the current index of the cursor</param>
            <remarks>
            Only fully qualified keys are allowed.  Partial keys and wildcards
            are forbidden.
            </remarks>
            <returns>true if a record was found, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.GotoPosition(Microsoft.Database.Isam.Position)">
            <summary>
            Goto the given fractional position on the current index
            </summary>
            <param name="position">The desired position on the current index of the cursor</param>
            <remarks>
            As a side effect, any restriction in effect will be cleared.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.GotoLocation(Microsoft.Database.Isam.Location)">
            <summary>
            Goto the given location on the current index
            </summary>
            <param name="location">The desired location on the current index of the cursor</param>
            <remarks>
            As a side effect, any restriction in effect will be cleared.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.FindRecords(Microsoft.Database.Isam.MatchCriteria,Microsoft.Database.Isam.Key)">
            <summary>
            Restricts the records that are visible to the cursor to those that
            match the given key by the given criteria.  The key may contain
            prefix or wildcard key segments which can be used to further
            qualify the desired matching records.
            </summary>
            <param name="criteria">The inequality used to specify which records to find on the current index</param>
            <param name="key">The partial or full key used to specify which records to find on the current index</param>
            <remarks>
            The restriction will remain in effect until explicitly reset or
            until implicitly reset by other methods as noted.
            <para>
            Any previously defined restriction will be cleared.
            </para>
            <para>
            The cursor will be positioned before the first record in the new
            restriction.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.FindRecordsBetween(Microsoft.Database.Isam.Key,Microsoft.Database.Isam.BoundCriteria,Microsoft.Database.Isam.Key,Microsoft.Database.Isam.BoundCriteria)">
            <summary>
            Restricts the records that are visible to the cursor to a range of
            the current index delineated by the specified keys.
            </summary>
            <param name="keyStart">The partial or full key used to set the start of the records to find on the current index</param>
            <param name="criteriaStart">Indicates if the starting key is inclusive or exclusive</param>
            <param name="keyEnd">The partial or full key used to set the end of the records to find on the current index</param>
            <param name="criteriaEnd">Indicates if the ending key is inclusive or exclusive</param>
            <remarks>
            The restriction will remain in effect until explicitly reset or
            until implicitly reset by other methods as noted.
            <para>
            Any previously defined restriction will be cleared.
            </para>
            <para>
            The cursor will be positioned before the first record in the new
            restriction.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.FindAllRecords">
            <summary>
            Restores the visibility of all records on the current index to the
            cursor.
            </summary>
            <remarks>
            The cursor position will remain unchanged.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.BeginEditForInsert">
            <summary>
            Create a new record for insertion into the table.
            </summary>
            <remarks>
            The record will not be inserted until the changes are accepted.
            <para>
            Changes must be made to the record's fields through EditRecord.
            </para>
            <para>
            It is illegal to insert a new record when already inserting or
            updating a record.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.BeginEditForUpdate">
            <summary>
            Prepare to update the current record
            </summary>
            <remarks>
            The record will not be updated until the changes are accepted.
            <para>
            Changes must be made to the record's fields through EditRecord.
            </para>
            <para>
            It is illegal to update a record when already inserting or updating
            a record.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.RejectChanges">
            <summary>
            Discard any changes made to the current record or the new record
            </summary>
            <remarks>
            It is illegal to cancel an insert or update when not inserting or
            updating a record.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.AcceptChanges">
            <summary>
            Discard the changes made to the current record or the new record
            </summary>
            <remarks>
            It is illegal to accept an insert or update when not inserting or
            updating a record.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.Delete">
            <summary>
            Delete the current record
            </summary>
            <remarks>
            It is illegal to delete a record when inserting or updating a
            record.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.GetEnumerator">
            <summary>
            Fetch an enumerator containing all the records visible to the cursor.
            </summary>
            <returns>An enumerator containing all the records visible to the cursor.</returns>
            <remarks>
            This is the type safe version that may not work in other CLR
            languages.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Fetch an enumerator containing all the records visible to the cursor
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <remarks>
            This will change the current position of the cursor.
            This is the standard version that will work with other CLR
            languages.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.CheckDisposed">
            <summary>
            Checks the disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Thrown when the object is already disposed.
            </exception>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.CheckRecord">
            <summary>
            Checks the record.
            </summary>
            <exception cref="T:Microsoft.Isam.Esent.Interop.EsentNoCurrentRecordException">
            Thrown when the cursor is not on a record.
            </exception>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.CheckNotUpdating">
            <summary>
            Checks the not updating.
            </summary>
            <exception cref="T:System.InvalidOperationException">It is illegal to move to a different record when inserting or updating a record.</exception>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.OnNavigation">
            <summary>
            Called when [navigation].
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.GetFields(Microsoft.Isam.Esent.Interop.RetrieveColumnGrbit)">
            <summary>
            Gets the fields of the current row.
            </summary>
            <param name="grbit">The grbit.</param>
            <returns>A <see cref="T:Microsoft.Database.Isam.FieldCollection"/> object to allow retrieval of all fields of the current row.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.MakeKey(Microsoft.Database.Isam.Key,System.Boolean)">
            <summary>
            Makes the key.
            </summary>
            <param name="key">The key.</param>
            <param name="end">if set to <c>true</c> specifies that the key represents the End Limit
            (<see cref="F:Microsoft.Isam.Esent.Interop.MakeKeyGrbit.PartialColumnStartLimit"/>/<see cref="F:Microsoft.Isam.Esent.Interop.MakeKeyGrbit.PartialColumnEndLimit"/>/
            <see cref="F:Microsoft.Isam.Esent.Interop.MakeKeyGrbit.FullColumnStartLimit"/>/<see cref="F:Microsoft.Isam.Esent.Interop.MakeKeyGrbit.FullColumnEndLimit"/>).</param>
            <returns>The byte value of the key for the index entry
            at the current position of a cursor.</returns>
            <exception cref="T:System.ArgumentException">the provided key must have a key segment per key column on the current index or it must contain a prefix or wildcard;key</exception>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.SetLowerLimit">
            <summary>
            Sets the lower limit.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.SetUpperLimit">
            <summary>
            Sets the upper limit.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.CompareByteArrays(System.Byte[],System.Byte[])">
            <summary>
            Compares the byte arrays, up to the shorter of the two arrays.
            </summary>
            <param name="array1">The first array.</param>
            <param name="array2">The second array.</param>
            <returns>A numerical value indicating which array is greater.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.Cursor.CheckRange">
            <summary>
            Checks if the cursor is in the index range specified.
            </summary>
            <returns>Whether the cursor is currently in the index range.</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.Cursor.Database">
            <summary>
            Gets the database that created this cursor
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.Cursor.TableDefinition">
            <summary>
            Gets the definition for the table under this cursor
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.Cursor.CurrentIndexDefinition">
            <summary>
            Gets the definition for the current index of this cursor
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.Cursor.Fields">
            <summary>
            Gets a collection containing all the field values for the
            current record.  If a record is currently being inserted or updated
            then the field values will reflect the new data.
            </summary>
            <remarks>
            The field values are cached in the Cursor object.  This cache will
            be automatically updated if the Cursor moves to a new record or if
            another Session updates the record.  However, this cache will NOT
            be updated if another Cursor belonging to the same Session updates
            the record.  The cache can be forced to be updated by performing a
            Move( 0 ) on the containing Cursor.
            <para>
            The cache will be reloaded on every call if the Session that opened
            this Cursor is not in a transaction.  This is required because
            the record data can change at any time when not in a transaction.
            If repeated references to Cursor.Fields will be made, they should
            all be done inside the same transaction to avoid poor performance.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.Cursor.Record">
            <summary>
            Gets the current record for the cursor
            </summary>
            <remarks>
            The field values seen through this column accessor will
            represent the original data in the record during an update
            operation.
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.Cursor.EditRecord">
            <summary>
            Gets the current record for the cursor
            </summary>
            <remarks>
            The field values seen through this column accessor will
            represent the modified data in the record during an update
            operation.
            <para>
            Only this column accessor may be used to set fields in a record.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.Cursor.IndexRecord">
            <summary>
            Gets the current record for the cursor
            </summary>
            <remarks>
            The field values seen through this column accessor will
            represent the original data in the record during an update
            operation.
            <para>
            Fetching field values through this column accessor for columns that
            are also key columns in the current index may result in improved
            performance.  This is because in some cases, the field value may be
            computed from the index entry rather that fetched from the record.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.Cursor.CurrentIndex">
            <summary>
            Gets or sets the current index of this cursor.
            </summary>
            <remarks>
            If the table has no primary index then the name of the current
            index is an empty string.
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.Cursor.Key">
            <summary>
            Gets or sets the key corresponding to the current record for the current index
            of the cursor.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.Cursor.Position">
            <summary>
            Gets or sets the position of the current record for the current index of the
            cursor.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.Cursor.Location">
            <summary>
            Gets or sets the location of the current record for the current index of the
            cursor.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.Cursor.Disposed">
            <summary>
            Gets or sets a value indicating whether [disposed].
            </summary>
            <value>
              <c>true</c> if [disposed]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Microsoft.Database.Isam.CursorEnumerator">
            <summary>
            Enumerates the records visible to a given cursor.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.CursorEnumerator.cursor">
            <summary>
            The cursor
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.CursorEnumerator.moved">
            <summary>
            The moved
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.CursorEnumerator.current">
            <summary>
            The current
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.CursorEnumerator.#ctor(Microsoft.Database.Isam.Cursor)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.CursorEnumerator"/> class.
            </summary>
            <param name="cursor">The cursor.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.CursorEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.CursorEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Microsoft.Database.Isam.CursorEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>The current element in the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            after last record in cursor
            or
            before first record in cursor
            </exception>
            <remarks>
            This is the type safe version that may not work in other CLR
            languages.
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.CursorEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>The current element in the collection.</returns>
            <remarks>
            This is the standard version that will work with other CLR
            languages.
            </remarks>
        </member>
        <member name="T:Microsoft.Database.Isam.Database">
            <summary>
            A Database is a file used by the ISAM to store data.  It is organized
            into tables which are in turn comprised of columns and indices and
            contain data in the form of records.  The database's schema can be
            enumerated and manipulated by this object.  Also, the database's
            tables can be opened for access by this object.
            </summary>
        </member>
        <member name="T:Microsoft.Database.Isam.DatabaseCommon">
            <summary>
            A Database is a file used by the ISAM to store data.  It is organized
            into tables which are in turn comprised of columns and indices and
            contain data in the form of records.  The database's schema can be
            enumerated and manipulated by this object.  Also, the database's
            tables can be opened for access by this object.
            <para>
            DatabaseCommon is the common root class for all types of databases.
            Currently, there are two types:  Database which provides access to
            ordinary databases and TemporaryDatabase which provides access to
            temporary databases.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.DatabaseCommon.schemaUpdateID">
            <summary>
            The schema update identifier
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.DatabaseCommon.isamSession">
            <summary>
            The session
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.DatabaseCommon.cleanup">
            <summary>
            The cleanup
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.DatabaseCommon.disposed">
            <summary>
            The disposed
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.#ctor(Microsoft.Database.Isam.IsamSession)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.DatabaseCommon"/> class.
            </summary>
            <param name="isamSession">The session.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.Finalize">
            <summary>
            Finalizes an instance of the DatabaseCommon class
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.CreateTable(Microsoft.Database.Isam.TableDefinition)">
            <summary>
            Creates a single table with the specified definition in the database
            </summary>
            <param name="tableDefinition">The table definition.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.DropTable(System.String)">
            <summary>
            Deletes a single table in the database
            </summary>
            <param name="tableName">Name of the table.</param>
            <remarks>
            It is currently not possible to delete a table that is being used
            by a Cursor.  All such Cursors must be disposed before the
            table can be successfully deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.Exists(System.String)">
            <summary>
            Determines if a given table exists in the database
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns>
            true if the table was found, false otherwise
            </returns>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.OpenCursor(System.String)">
            <summary>
            Opens a cursor over the specified table.
            </summary>
            <param name="tableName">the name of the table to be opened</param>
            <returns>a cursor over the specified table in this database</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.ColtypFromColumnDefinition(Microsoft.Database.Isam.ColumnDefinition)">
            <summary>
            Converts <see cref="T:Microsoft.Database.Isam.ColumnDefinition"/> to a <see cref="T:Microsoft.Isam.Esent.Interop.JET_coltyp"/>.
            </summary>
            <param name="columnDefinition">The column definition.</param>
            <returns>The <see cref="T:Microsoft.Isam.Esent.Interop.JET_coltyp"/> equivalent of <paramref name="columnDefinition"/>.</returns>
            <exception cref="T:System.ArgumentException">Cannot map this type to a native column type</exception>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.IndexKeyFromIndexDefinition(Microsoft.Database.Isam.IndexDefinition)">
            <summary>
            Converts a <see cref="T:Microsoft.Database.Isam.IndexDefinition"/> to a double-null-terminated string usable by the
            C API to create an index.
            </summary>
            <param name="indexDefinition">The index definition.</param>
            <returns>A double-null-terminated string usable by the C API.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.ConditionalColumnsFromIndexDefinition(Microsoft.Database.Isam.IndexDefinition)">
            <summary>
            Converts a <see cref="T:Microsoft.Database.Isam.IndexDefinition"/> to an array of <see cref="T:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN"/> objects.
            </summary>
            <param name="indexDefinition">The index definition.</param>
            <returns>An array of <see cref="T:Microsoft.Isam.Esent.Interop.JET_CONDITIONALCOLUMN"/> objects.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.GrbitFromIndexDefinition(Microsoft.Database.Isam.IndexDefinition)">
            <summary>
            Retrieves the <see cref="T:Microsoft.Isam.Esent.Interop.CreateIndexGrbit"/> options from an <see cref="T:Microsoft.Database.Isam.IndexDefinition"/> object.
            </summary>
            <param name="indexDefinition">The index definition.</param>
            <returns>The <see cref="T:Microsoft.Isam.Esent.Interop.CreateIndexGrbit"/> options.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.CheckName(System.String,System.Exception)">
            <summary>
            Checks the name.
            </summary>
            <param name="name">The name.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.ESENTVersion(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts a major/minor/build number of ESENT to a single number for comparison.
            </summary>
            <param name="major">The major.</param>
            <param name="minor">The minor.</param>
            <param name="build">The build.</param>
            <param name="update">The update.</param>
            <returns>An integer value equivalent of the version specified.</returns>
            <remarks>Returns a different value from <see cref="M:Microsoft.Database.Isam.DatabaseCommon.ESEVersion(System.Int32,System.Int32,System.Int32,System.Int32)"/></remarks>
            <seealso cref="M:Microsoft.Database.Isam.DatabaseCommon.ESEVersion(System.Int32,System.Int32,System.Int32,System.Int32)"/>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.ESEVersion(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts a major/minor/build number of ESE to a single number for comparison.
            </summary>
            <param name="major">The major.</param>
            <param name="minor">The minor.</param>
            <param name="build">The build.</param>
            <param name="update">The update.</param>
            <returns>An integer value equivalent of the version specified.</returns>
            <remarks>Returns a different value from <see cref="M:Microsoft.Database.Isam.DatabaseCommon.ESENTVersion(System.Int32,System.Int32,System.Int32,System.Int32)"/></remarks>
            <seealso cref="M:Microsoft.Database.Isam.DatabaseCommon.ESENTVersion(System.Int32,System.Int32,System.Int32,System.Int32)"/>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.CheckEngineVersion(Microsoft.Database.Isam.IsamSession,System.Int64,System.Int64)">
            <summary>
            Checks the engine version.
            </summary>
            <param name="isamSession">The session.</param>
            <param name="versionESENT">The minimum ESENT version required.</param>
            <param name="versionESE">The minimum ESE version required.</param>
            <returns>Whether the current engine is greater than or equal to the required version.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.CheckEngineVersion(Microsoft.Database.Isam.IsamSession,System.Int64,System.Int64,System.Exception)">
            <summary>
            Checks the engine version.
            </summary>
            <param name="isamSession">The session.</param>
            <param name="versionESENT">The version esent.</param>
            <param name="versionESE">The version ese.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.DatabaseCommon.CheckDisposed">
            <summary>
            Checks the disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Thrown when the object is already disposed.
            </exception>
        </member>
        <member name="P:Microsoft.Database.Isam.DatabaseCommon.IsamSession">
            <summary>
            Gets the session that created this database
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.DatabaseCommon.Tables">
            <summary>
            Gets a collection of tables in the database.
            </summary>
            <returns>a collection of tables in the database</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.DatabaseCommon.SchemaUpdateID">
            <summary>
            Gets or sets the schema update identifier.
            </summary>
            <value>
            The schema update identifier.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.DatabaseCommon.Disposed">
            <summary>
            Gets or sets a value indicating whether [disposed].
            </summary>
            <value>
              <c>true</c> if [disposed]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Microsoft.Database.Isam.Database.dbid">
            <summary>
            The dbid
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Database.tableCollection">
            <summary>
            The table collection
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Database.cleanup">
            <summary>
            The cleanup
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Database.disposed">
            <summary>
            The disposed
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Database.#ctor(Microsoft.Database.Isam.IsamSession,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.Database"/> class.
            </summary>
            <param name="isamSession">The session.</param>
            <param name="databaseName">Name of the database.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.Database.Finalize">
            <summary>
            Finalizes an instance of the Database class
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Database.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Database.CreateTable(Microsoft.Database.Isam.TableDefinition)">
            <summary>
            Creates a single table with the specified definition in the database
            </summary>
            <param name="tableDefinition">The table definition.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.Database.DropTable(System.String)">
            <summary>
            Deletes a single table in the database.
            </summary>
            <param name="tableName">The name of the table to be deleted.</param>
            <remarks>
            It is currently not possible to delete a table that is being used
            by a Cursor.  All such Cursors must be disposed before the
            table can be successfully deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Database.Exists(System.String)">
            <summary>
            Determines if a given table exists in the database
            </summary>
            <param name="tableName">The name of the table to evaluate for existence.</param>
            <returns>
            true if the table was found, false otherwise
            </returns>
        </member>
        <member name="M:Microsoft.Database.Isam.Database.OpenCursor(System.String,System.Boolean)">
            <summary>
            Opens a cursor over the specified table.
            </summary>
            <param name="tableName">the name of the table to be opened</param>
            <param name="exclusive">when true, the table will be opened for exclusive access</param>
            <returns>a cursor over the specified table in this database</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.Database.OpenCursor(System.String)">
            <summary>
            Opens a cursor over the specified table.
            </summary>
            <param name="tableName">the name of the table to be opened</param>
            <returns>a cursor over the specified table in this database</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.Database.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Database.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.Database.CheckDisposed">
            <summary>
            Checks the disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Thrown when the object is already disposed.
            </exception>
        </member>
        <member name="P:Microsoft.Database.Isam.Database.Tables">
            <summary>
            Gets a collection of tables in the database.
            </summary>
            <returns>a collection of tables in the database</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.Database.Dbid">
            <summary>
            Gets the dbid.
            </summary>
            <value>
            The dbid.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.Database.Disposed">
            <summary>
            Gets or sets a value indicating whether [disposed].
            </summary>
            <value>
              <c>true</c> if [disposed]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Microsoft.Database.Isam.FieldCollection">
            <summary>
            A Field Collection represents the set of fields that are in a given
            record.  It can be used to efficiently navigate those fields.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.FieldCollection.location">
            <summary>
            The location
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.FieldCollection.readOnly">
            <summary>
            The read only
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldCollection.GetEnumerator">
            <summary>
            Fetches an enumerator containing all the fields for this record.
            </summary>
            <returns>An enumerator containing all the fields for this record.</returns>
            <remarks>
            This is the type safe version that may not work in other CLR
            languages.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldCollection.Add(Microsoft.Database.Isam.FieldValueCollection)">
            <summary>
            Adds the specified values.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldCollection.Contains(System.String)">
            <summary>
            Returns whether the specifed column exists in the row.
            </summary>
            <param name="columnName">Name of the column.</param>
            <returns>Whether the specifed column exists in the row.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldCollection.Contains(Microsoft.Database.Isam.Columnid)">
            <summary>
            Returns whether the specifed column exists in the row.
            </summary>
            <param name="column">The column.</param>
            <returns>Whether the specifed column exists in the row.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldCollection.Remove(System.String)">
            <summary>
            Removes the specified column name.
            </summary>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldCollection.Remove(Microsoft.Database.Isam.Columnid)">
            <summary>
            Removes the specified column.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Fetches an enumerator containing all the fields for this record
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <remarks>
            This is the standard version that will work with other CLR
            languages.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldCollection.OnClear">
            <summary>
            Performs additional custom processes before clearing the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldCollection.OnInsert(System.Object,System.Object)">
            <summary>
            Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
            <param name="key">The key of the element to insert.</param>
            <param name="value">The value of the element to insert.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldCollection.OnRemove(System.Object,System.Object)">
            <summary>
            Performs additional custom processes before removing an element from the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <param name="value">The value of the element to remove.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldCollection.OnSet(System.Object,System.Object,System.Object)">
            <summary>
            Performs additional custom processes before setting a value in the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
            <param name="key">The key of the element to locate.</param>
            <param name="oldValue">The old value of the element associated with <paramref name="key" />.</param>
            <param name="newValue">The new value of the element associated with <paramref name="key" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldCollection.OnValidate(System.Object,System.Object)">
            <summary>
            Performs additional custom processes when validating the element with the specified key and value.
            </summary>
            <param name="key">The key of the element to validate.</param>
            <param name="value">The value of the element to validate.</param>
            <exception cref="T:System.ArgumentException">
            key must be of type System.String;key
            or
            value must be of type FieldValueCollection;value
            or
            key must match value.Name;key
            </exception>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldCollection.CheckReadOnly">
            <summary>
            Checks the read only.
            </summary>
            <exception cref="T:System.NotSupportedException">this field collection cannot be changed</exception>
        </member>
        <member name="P:Microsoft.Database.Isam.FieldCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether this field collection cannot be changed.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.FieldCollection.Names">
            <summary>
            Gets the names.
            </summary>
            <value>
            The names.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.FieldCollection.Location">
            <summary>
            Gets or sets the location of the record that contained these fields.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.FieldCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object has a fixed size.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.FieldCollection.ReadOnly">
            <summary>
            Sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.FieldCollection.Item(System.String)">
            <summary>
            The field values for the specified column.
            </summary>
            <value>
            The <see cref="T:Microsoft.Database.Isam.FieldValueCollection"/>.
            </value>
            <param name="columnName">the name of the column whose field values are desired</param>
            <returns>A <see cref="T:Microsoft.Database.Isam.FieldValueCollection"/> object to access values of this column.</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.FieldCollection.Item(Microsoft.Database.Isam.Columnid)">
            <summary>
            The field values for the specified column
            </summary>
            <value>
            The <see cref="T:Microsoft.Database.Isam.FieldValueCollection"/>.
            </value>
            <param name="column">the column ID whose field values are desired</param>
            <returns>A <see cref="T:Microsoft.Database.Isam.FieldValueCollection"/> object to access values of this column.</returns>
        </member>
        <member name="T:Microsoft.Database.Isam.FieldValueCollection">
            <summary>
            A Field Value Collection represents the set of field values that are in
            a given field in a given record.  It can be used to efficiently
            navigate those field values.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.FieldValueCollection.columnid">
            <summary>
            The columnid
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.FieldValueCollection.readOnly">
            <summary>
            The read only
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldValueCollection.#ctor(Microsoft.Database.Isam.Columnid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.FieldValueCollection"/> class.
            </summary>
            <param name="columnid">The columnid.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldValueCollection.Add(System.Object)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldValueCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            The index of <paramref name="value" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldValueCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldValueCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to remove from the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldValueCollection.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldValueCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldValueCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which to insert <paramref name="value" />.</param>
            <param name="value">The new value of the element at <paramref name="index" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldValueCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes when removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
            <param name="value">The value of the element to remove from <paramref name="index" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldValueCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="oldValue" /> can be found.</param>
            <param name="oldValue">The value to replace with <paramref name="newValue" />.</param>
            <param name="newValue">The new value of the element at <paramref name="index" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldValueCollection.OnValidate(System.Object)">
            <summary>
            Performs additional custom processes when validating a value.
            </summary>
            <param name="value">The object to validate.</param>
            <exception cref="T:System.ArgumentException">value must be of type  + Type +  or of type  + typeof(System.DBNull);value</exception>
        </member>
        <member name="M:Microsoft.Database.Isam.FieldValueCollection.CheckReadOnly">
            <summary>
            Checks the read only.
            </summary>
            <exception cref="T:System.NotSupportedException">this field value collection cannot be changed</exception>
        </member>
        <member name="P:Microsoft.Database.Isam.FieldValueCollection.Columnid">
            <summary>
            Gets the column ID of the column for which these field values were set
            in the record
            </summary>
            <value>
            The columnid.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.FieldValueCollection.Name">
            <summary>
            Gets the name of the column for which these field values were set in the
            record
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.FieldValueCollection.Type">
            <summary>
            Gets the type of the column for which these field values were set in the
            record
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.FieldValueCollection.ReadOnly">
            <summary>
            Gets or sets a value indicating whether this field value collection cannot be changed
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.FieldValueCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The specific element at that position.</returns>
        </member>
        <member name="T:Microsoft.Database.Isam.IndexCollection">
            <summary>
            A class containing information about the indices on a particular table.
            It is usually used for metadata discovery.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexCollection.database">
            <summary>
            The database
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexCollection.tableName">
            <summary>
            The table name
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexCollection.cachedIndexDefinition">
            <summary>
            The cached index definition
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexCollection.indexDefinition">
            <summary>
            The index definition
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexCollection.indexUpdateID">
            <summary>
            The index update identifier
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexCollection.readOnly">
            <summary>
            The read only
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.IndexCollection"/> class. 
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexCollection.#ctor(Microsoft.Database.Isam.Database,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.IndexCollection"/> class.
            </summary>
            <param name="database">The database.</param>
            <param name="tableName">Name of the table.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexCollection.GetEnumerator">
            <summary>
            Fetches an enumerator containing all the indices on this table.
            </summary>
            <returns>An enumerator containing all the indices on this table.</returns>
            <remarks>
            This is the type safe version that may not work in other CLR
            languages.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexCollection.Add(Microsoft.Database.Isam.IndexDefinition)">
            <summary>
            Adds the specified index definition.
            </summary>
            <param name="indexDefinition">The index definition.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexCollection.Contains(System.String)">
            <summary>
            Determines if the table contains an index with the given name.
            </summary>
            <param name="indexName">Name of the index.</param>
            <returns>Whether the collection contains an index of name <paramref name="indexName"/>.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexCollection.Remove(System.String)">
            <summary>
            Removes the specified index name.
            </summary>
            <param name="indexName">Name of the index.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Fetches an enumerator containing all the indices on this table
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <remarks>
            This is the standard version that will work with other CLR
            languages.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexCollection.OnClear">
            <summary>
            Performs additional custom processes before clearing the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexCollection.OnInsert(System.Object,System.Object)">
            <summary>
            Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
            <param name="key">The key of the element to insert.</param>
            <param name="value">The value of the element to insert.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexCollection.OnRemove(System.Object,System.Object)">
            <summary>
            Performs additional custom processes before removing an element from the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <param name="value">The value of the element to remove.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexCollection.OnSet(System.Object,System.Object,System.Object)">
            <summary>
            Performs additional custom processes before setting a value in the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
            <param name="key">The key of the element to locate.</param>
            <param name="oldValue">The old value of the element associated with <paramref name="key" />.</param>
            <param name="newValue">The new value of the element associated with <paramref name="key" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexCollection.OnValidate(System.Object,System.Object)">
            <summary>
            Performs additional custom processes when validating the element with the specified key and value.
            </summary>
            <param name="key">The key of the element to validate.</param>
            <param name="value">The value of the element to validate.</param>
            <exception cref="T:System.ArgumentException">
            key must be of type System.String;key
            or
            value must be of type IndexDefinition;value
            or
            key must match value.Name;key
            </exception>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexCollection.CheckReadOnly">
            <summary>
            Checks the read only.
            </summary>
            <exception cref="T:System.NotSupportedException">this index collection cannot be changed</exception>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexCollection.Names">
            <summary>
            Gets the names.
            </summary>
            <value>
            The names.
            </value>
            <exception cref="T:System.InvalidOperationException">the names of the indices in this index collection cannot be enumerated in this manner when accessing the table definition of an existing table</exception>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object has a fixed size.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IDictionary" /> object is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexCollection.ReadOnly">
            <summary>
            Sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexCollection.Item(System.String)">
            <summary>
            Fetches the Index Definition for the specified index name.
            </summary>
            <value>
            The <see cref="T:Microsoft.Database.Isam.IndexDefinition"/> corresponding to <paramref name="indexName"/>.
            </value>
            <param name="indexName">Name of the index.</param>
            <returns>An <see cref="T:Microsoft.Database.Isam.IndexDefinition"/> object.</returns>
        </member>
        <member name="T:Microsoft.Database.Isam.IndexDefinition">
            <summary>
            An Index Definition contains the schema for a single index.  It can be
            used to explore the schema for an existing index and to create the
            definition for a new index.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexDefinition.name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexDefinition.flags">
            <summary>
            The flags
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexDefinition.density">
            <summary>
            The density
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexDefinition.cultureInfo">
            <summary>
            The culture information
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexDefinition.compareOptions">
            <summary>
            The compare options
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexDefinition.maxKeyLength">
            <summary>
            The maximum key length
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexDefinition.keyColumnCollection">
            <summary>
            The key column collection
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexDefinition.conditionalColumnCollection">
            <summary>
            The conditional column collection
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexDefinition.readOnly">
            <summary>
            The read only
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexDefinition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.IndexDefinition"/> class. 
            For use when defining a new index.
            </summary>
            <param name="name">
            The name of the index to be defined.
            </param>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.IndexDefinition"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexDefinition.Load(Microsoft.Database.Isam.Database,System.String,Microsoft.Isam.Esent.Interop.JET_INDEXLIST)">
            <summary>
            Creates an <see cref="T:Microsoft.Database.Isam.IndexDefinition"/> object from the specified <paramref name="indexList"/>.
            </summary>
            <param name="database">The database.</param>
            <param name="tableName">Name of the table.</param>
            <param name="indexList">The index list.</param>
            <returns>An <see cref="T:Microsoft.Database.Isam.IndexDefinition"/> object represting the specified index.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexDefinition.IndexFlagsFromGrbits(Microsoft.Isam.Esent.Interop.CreateIndexGrbit)">
            <summary>
            Converts the <see cref="T:Microsoft.Isam.Esent.Interop.CreateIndexGrbit"/> enumeration to <see cref="T:Microsoft.Database.Isam.IndexFlags"/>.
            </summary>
            <param name="grbitIndex">Index of the grbit.</param>
            <returns>The <see cref="T:Microsoft.Database.Isam.IndexFlags"/> equivalent to <paramref name="grbitIndex"/>.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexDefinition.CheckReadOnly">
            <summary>
            Checks the read only.
            </summary>
            <exception cref="T:System.NotSupportedException">this index definition cannot be changed</exception>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexDefinition.Name">
            <summary>
            Gets the name of the index.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexDefinition.Flags">
            <summary>
            Gets or sets the index's flags.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexDefinition.Density">
            <summary>
            Gets or sets the ideal density of the index in percent.
            </summary>
            <remarks>
            The ideal density of an index is used to setup a newly created
            index into a layout on disk that is appropriate for the typical
            workload on that index.  For example, an index that will always be
            appended should have a density of 100% and an index that will
            experience random insertion should have a lower density to reflect
            the average density on which that index would converge at run time.
            <para>
            The density is primarily tweaked for performance reasons.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexDefinition.CultureInfo">
            <summary>
            Gets or sets the locale of the index.
            </summary>
            <remarks>
            A locale can be specified for any index but will only affect
            indexes with key columns containing string data.
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexDefinition.CompareOptions">
            <summary>
            Gets or sets the locale sensitive collation options for the index.
            </summary>
            <remarks>
            These options can be specified for any index but will only affect
            indexes with key columns containing string data.
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexDefinition.MaxKeyLength">
            <summary>
            Gets or sets the maximum length of a normalized key that will be stored in the
            index in bytes.
            </summary>
            <remarks>
            In many ways, this is one of the most critical parameters of an
            index.  Key truncation can cause different records to end up with
            the same key which makes them indistinguishable to the index.  This
            can cause records to be ordered randomly with respect to each other
            according to the index's sort order.  This can also cause otherwise
            unique index entries to be considered duplicates which can cause
            some updates to fail.
            <para>
            The current limits for the ISAM are as follows:  databases with 2KB
            pages can have keys up to 255B in length;  databases with 4KB pages
            can have keys up to 1000B in length;  and databases with 8KB pages
            can have keys up to 2000B in length.  Note that these lengths are
            for normalized keys not raw key data.  Normalized keys are always
            slightly longer than the raw data from which they are derived.
            </para>
            <para>
            NOTE:  a max key length of 255 is "special" in that it uses legacy
            semantics for building keys.  Those semantics include the truncation
            of the source data for normalization at 256 bytes.  This mode should
            only be used if you specifically want this behavior for backwards
            compatibility because it causes errors during the generation of
            index keys under certain conditions.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexDefinition.KeyColumns">
            <summary>
            Gets a collection of the key columns in this index.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexDefinition.ConditionalColumns">
            <summary>
            Gets a collection of conditional columns in this index.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexDefinition.IsReadOnly">
            <summary>
            Gets a value indicating whether this index definition cannot be changed
            </summary>
            <value>
              <c>true</c> if [is read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexDefinition.ReadOnly">
            <summary>
            Sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Microsoft.Database.Isam.IndexEnumerator">
            <summary>
            Enumerates the indices on a given table.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexEnumerator.database">
            <summary>
            The database
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexEnumerator.tableName">
            <summary>
            The table name
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexEnumerator.enumerator">
            <summary>
            The enumerator
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexEnumerator.indexList">
            <summary>
            The index list
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexEnumerator.cleanup">
            <summary>
            The cleanup
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexEnumerator.moved">
            <summary>
            The moved
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexEnumerator.current">
            <summary>
            The current
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexEnumerator.indexDefinition">
            <summary>
            The index definition
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexEnumerator.indexUpdateID">
            <summary>
            The index update identifier
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexEnumerator.#ctor(Microsoft.Database.Isam.Database,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.IndexEnumerator"/> class.
            </summary>
            <param name="database">The database.</param>
            <param name="tableName">Name of the table.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexEnumerator.#ctor(System.Collections.IDictionaryEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.IndexEnumerator"/> class.
            </summary>
            <param name="enumerator">The enumerator.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexEnumerator.Finalize">
            <summary>
            Finalizes an instance of the IndexEnumerator class
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IndexEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>The current element in the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            after last index on table
            or
            before first index on table
            </exception>
            <remarks>
            This is the type safe version that may not work in other CLR
            languages.
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.IndexEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>The current element in the collection.</returns>
            <remarks>
            This is the standard version that will work with other CLR
            languages.
            </remarks>
        </member>
        <member name="T:Microsoft.Database.Isam.IndexFlags">
            <summary>
            Index flags enumeration
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexFlags.None">
            <summary>
            The index will use the default set of flags.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexFlags.Unique">
            <summary>
            All keys in the index must be unique or the insertion or update of
            the associated record will fail.  This uniqueness constraint also
            applies to truncated keys.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexFlags.Primary">
            <summary>
            The keys in this index represent the primary key for the record.
            At this time, the primary index is also the clustered index of the
            table.  If no primary index is defined for a table then a default
            primary index with a sequential key will be used.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexFlags.DisallowNull">
            <summary>
            Each key in the index must have a non-NULL value for every key
            column in the index definition or the insertion or update of the
            associated record will fail.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexFlags.IgnoreNull">
            <summary>
            The index will only contain entries for keys with at least one
            non-NULL key column.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexFlags.IgnoreAnyNull">
            <summary>
            The index will only contain entries for keys comprised entirely of
            non-NULL key columns.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexFlags.AllowNull">
            <summary>
            The index will contain entries for keys containing any combination
            of NULL and non-NULL key columns.  The collation order of NULL key
            column values versus non-NULL key column values is determined by the
            SortNullsLow and SortNullsHigh IndexFlags.  This represents the
            default treatment of NULL key column values in an index entry.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexFlags.SortNullsLow">
            <summary>
            The collation order of the index is set such that NULL key column
            values sort closer to the start of the index than non-NULL key
            column values.  This is the default NULL collation order.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexFlags.SortNullsHigh">
            <summary>
            The collation order of the index is set such that NULL key column
            values sort closer to the end of the index than non-NULL key column
            values.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexFlags.AllowTruncation">
            <summary>
            Any key in the index may be larger than the maximum size of the key
            supported by that index except that any key beyond the maximum size
            will be truncated.  This means that there can be no meaningful
            relative ordering between keys that are identical after truncation
            nor can there be any distinction between entries generated by
            different key column values whose keys are identical after
            truncation.
            <remarks>
            This bit is unique to the Isam layer. It is not actually supported
            by the underlying database layer. If it is not specified,
            <see cref="F:Microsoft.Database.Isam.IndexFlags.DisallowTruncation"/> is assumed. This is the opposite default
            of the underlying database layer
            <para>
            <see cref="F:Microsoft.Database.Isam.IndexFlags.AllowTruncation"/> and <see cref="F:Microsoft.Database.Isam.IndexFlags.DisallowTruncation"/>
            are mutually exclusive.
            </para>
            </remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IndexFlags.DisallowTruncation">
            <summary>
            Each key in the index must be smaller than the maximum size of the
            key supported by that index or the insertion or update of the
            associated record will fail.  Note that at the present time there
            is some overhead when converting key column values into a key so
            the maximum size of the key will be reached sooner than expected
            based on the raw size of the key column values.  Truncated keys are
            prohibited by default.
            </summary>
            <remarks>
            This is the default behaviour for Isam, but not the default for
            the underlying database layer.
            <see cref="F:Microsoft.Database.Isam.IndexFlags.AllowTruncation"/> and <see cref="F:Microsoft.Database.Isam.IndexFlags.DisallowTruncation"/>
            are mutually exclusive.
            </remarks>
        </member>
        <member name="T:Microsoft.Database.Isam.IsamInstance">
            <summary>
            An Instance represents the unit of recoverability for the ISAM.  It is
            used to manage the set of files that comprise the transaction logs and
            databases used by the ISAM.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamInstance.readOnly">
            <summary>
            The read only
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamInstance.instance">
            <summary>
            The instance
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamInstance.isamSystemParameters">
            <summary>
            The system parameters
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamInstance.cleanupInstance">
            <summary>
            The cleanup instance
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamInstance.instanceInitialized">
            <summary>
            The instance initialized
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamInstance.cleanupTempTables">
            <summary>
            The cleanup temporary tables
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamInstance.disposed">
            <summary>
            The disposed
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamInstance.tempTableHandleCollection">
            <summary>
            The temporary table handle collection
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamInstance.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.IsamInstance"/> class. 
            </summary>
            <param name="workingDirectory">
            The directory (relative or absolute) that will contain all the files managed by the ISAM.  The path must have a trailing backslash.
            </param>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamInstance.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.IsamInstance"/> class. 
            </summary>
            <param name="workingDirectory">
            The directory (relative or absolute) that will contain all the files managed by the ISAM.  The path must have a trailing backslash.
            </param>
            <param name="readOnly">
            Set to true when this instance will only be used to access read only databases
            </param>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamInstance.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.IsamInstance"/> class. 
            </summary>
            <param name="checkpointFileDirectoryPath">
            The directory (relative or absolute) that will contain the checkpoint file managed by the ISAM.  The path must have a trailing backslash.
            </param>
            <param name="logfileDirectoryPath">
            The directory (relative or absolute) that will contain the transaction log files managed by the ISAM.  The path must have a trailing backslash.
            </param>
            <param name="temporaryDatabaseFileDirectoryPath">
            The file or directory (relative or absolute) that will contain the temporary database managed by the ISAM.  If the path has a trailing backslash, it will be assumed to be a directory and a custom name for the temporary database will be created.  If the path does not have a trailing backslash, then it will be assumed to be a file and the temporary database will be stored in that file.
            </param>
            <param name="baseName">
            A three character prefix that will be used to name ISAM files.  This prefix can be used to make the ISAM's file names unique so that they may share directories with other instances.
            </param>
            <param name="eventSource">
            A short name that will be used to identify this instance when the ISAM emits diagnostic data.
            </param>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamInstance.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.IsamInstance"/> class. 
            </summary>
            <param name="checkpointFileDirectoryPath">
            The directory (relative or absolute) that will contain the checkpoint file managed by the ISAM.  The path must have a trailing backslash.
            </param>
            <param name="logfileDirectoryPath">
            The directory (relative or absolute) that will contain the transaction log files managed by the ISAM.  The path must have a trailing backslash.
            </param>
            <param name="temporaryDatabaseFileDirectoryPath">
            The file or directory (relative or absolute) that will contain the temporary database managed by the ISAM.  If the path has a trailing backslash, it will be assumed to be a directory and a custom name for the temporary database will be created.  If the path does not have a trailing backslash, then it will be assumed to be a file and the temporary database will be stored in that file.
            </param>
            <param name="baseName">
            A three character prefix that will be used to name ISAM files.  This prefix can be used to make the ISAM's file names unique so that they may share directories with other instances.
            </param>
            <param name="eventSource">
            A short name that will be used to identify this instance when the ISAM emits diagnostic data.
            </param>
            <param name="readOnly">
            Set to true when this instance will only be used to access read only databases
            </param>
            <param name="pageSize">
            Set to the page size that will be used by all databases managed by the instance.
            </param>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamInstance.Finalize">
            <summary>
            Finalizes an instance of the IsamInstance class
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamInstance.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamInstance.CreateSession">
            <summary>
            Creates a session
            </summary>
            <returns>a session associated with this instance</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamInstance.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamInstance.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamInstance.Create(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Creates the specified checkpoint file directory path.
            </summary>
            <param name="checkpointFileDirectoryPath">The checkpoint file directory path.</param>
            <param name="logfileDirectoryPath">The logfile directory path.</param>
            <param name="temporaryDatabaseFileDirectoryPath">The temporary database file directory path.</param>
            <param name="baseName">Name of the base.</param>
            <param name="eventSource">The event source.</param>
            <param name="isReadOnly">if set to <c>true</c> [is read only].</param>
            <param name="pageSize">Size of the page.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamInstance.CheckDisposed">
            <summary>
            Checks the disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Thrown when the object is already disposed.
            </exception>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamInstance.IsamSystemParameters">
            <summary>
            Gets a <see cref="T:Microsoft.Isam.Esent.Interop.SystemParameters"/> object that provides access to a boatload of parameters that can be used to
            tweak various aspects of the ISAM's behavior or performance for
            this instance.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamInstance.Inst">
            <summary>
            Gets the inst.
            </summary>
            <value>
            The inst.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamInstance.ReadOnly">
            <summary>
            Gets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamInstance.Disposed">
            <summary>
            Gets or sets a value indicating whether [disposed].
            </summary>
            <value>
              <c>true</c> if [disposed]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamInstance.TempTableHandles">
            <summary>
            Gets the temporary table handles.
            </summary>
            <value>
            The temporary table handles.
            </value>
        </member>
        <member name="T:Microsoft.Database.Isam.Key">
            <summary>
            This collection is used to construct keys using generic values for each
            key segment comprising the key.  Each key is NOT tied to any specific
            schema so the same key could be used with different indices.  However,
            the key must be compatible with the index with which it is used or else
            an argument exception will be thrown.  Type coercion will be performed
            as appropriate for each key segment when the key is used with an index
            based on the type of each key segment in the key versus the type of each
            key column in that index.  If type coercion fails, an invalid cast
            exception will be thrown when the key is used.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Key.prefix">
            <summary>
            The prefix
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Key.wildcard">
            <summary>
            The wildcard
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Key.Compose(System.Object[])">
            <summary>
            Returns a key containing one ordinary key segment per given value.
            </summary>
            <param name="values">the values for each key column that will be used to compose the key</param>
            <returns>A key containing one ordinary key segment per given value.</returns>
            <seealso cref="M:Microsoft.Database.Isam.Key.ComposeWildcard(System.Object[])"/>
            <seealso cref="M:Microsoft.Database.Isam.Key.ComposePrefix(System.Object[])"/>
        </member>
        <member name="M:Microsoft.Database.Isam.Key.ComposePrefix(System.Object[])">
            <summary>
            Returns a key containing one ordinary key segment per given value
            except that the last given value becomes a prefix key segment.
            </summary>
            <param name="values">the values for each key column that will be used to compose the key</param>
            <returns>A key containing one ordinary key segment per given value
            except that the last given value becomes a prefix key segment.</returns>
            <seealso cref="M:Microsoft.Database.Isam.Key.Compose(System.Object[])"/>
            <seealso cref="M:Microsoft.Database.Isam.Key.ComposeWildcard(System.Object[])"/>
        </member>
        <member name="M:Microsoft.Database.Isam.Key.ComposeWildcard(System.Object[])">
            <summary>
            Returns a key containing one ordinary key segment per given value
            and one wildcard key segment.
            </summary>
            <param name="values">the values for each key column that will be used to compose the key</param>
            <returns>A key containing one ordinary key segment per given value
            and one wildcard key segment.</returns>
            <seealso cref="M:Microsoft.Database.Isam.Key.Compose(System.Object[])"/>
            <seealso cref="M:Microsoft.Database.Isam.Key.ComposePrefix(System.Object[])"/>
        </member>
        <member name="M:Microsoft.Database.Isam.Key.Add(System.Object)">
            <summary>
            Sets the next key segment of the key to the given value.
            </summary>
            <param name="value">the value for the next key column that will be used to compose the key</param>
        </member>
        <member name="M:Microsoft.Database.Isam.Key.AddPrefix(System.Object)">
            <summary>
            Sets the next key segment of the key to the given value as a
            prefix.  A prefix key segment will match any column value that
            has a prefix that matches the given value.
            </summary>
            <param name="value">the value for the next key column that will be used to compose the key</param>
            <remarks>
            Prefix key segments only make sense in the context of a variable
            length column.  Any other use will result in an argument exception
            when the key is used.
            <para>
            A key may contain only one prefix key segment.  Further, a prefix
            key segment may not be followed by an ordinary key segment.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Key.AddWildcard">
            <summary>
            Sets the next key segment of the key to the given value as a
            wildcard.  A wildcard key segment will match any column value.
            </summary>
            <remarks>
            A key may contain any number of wildcard key segments.  Further, a
            wildcard key segment may be followed only by other wildcard key
            segments.  Finally, extra wildcard key segments will be ignored
            when the key is used.
            <para>
            A key with no key segments acts as if it contains a single wildcard
            key segment.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.Key.OnValidate(System.Object)">
            <summary>
            Performs additional custom processes when validating a value.
            </summary>
            <param name="value">The object to validate.</param>
            <exception cref="T:System.ArgumentException">
            value must be of type KeySegment;value
            or
            value cannot be a prefix if the key already contains a prefix;value
            or
            value cannot be a prefix if the key already contains a wildcard;value
            or
            value must be a wildcard if the key already contains a prefix;value
            or
            value must be a wildcard if the key already contains a wildcard;value
            </exception>
        </member>
        <member name="P:Microsoft.Database.Isam.Key.Start">
            <summary>
            Gets a key that can be used to represent the start of an index.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.Key.End">
            <summary>
            Gets a key that can be used to represent the end of an index.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.Key.HasPrefix">
            <summary>
            Gets a value indicating whether [has prefix].
            </summary>
            <value>
              <c>true</c> if [has prefix]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.Key.HasWildcard">
            <summary>
            Gets a value indicating whether [has wildcard].
            </summary>
            <value>
              <c>true</c> if [has wildcard]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Microsoft.Database.Isam.KeyColumn">
            <summary>
            A Key Column is a segment of an index used to determine the order of
            records in a table as seen through that index.  This object can be used
            to explore the schema of an existing index and to create the definition
            of a new index.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.KeyColumn.columnid">
            <summary>
            The columnid
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.KeyColumn.name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.KeyColumn.isAscending">
            <summary>
            The is ascending
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.KeyColumn.readOnly">
            <summary>
            The read only
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.KeyColumn.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.KeyColumn"/> class. 
            For use when defining a new key column in an
            index.
            </summary>
            <param name="name">
            The name of the column in the table to be used for this key column.
            </param>
            <param name="isAscending">
            True if the sort order of this key column is ascending, false if descending.
            </param>
        </member>
        <member name="M:Microsoft.Database.Isam.KeyColumn.#ctor(Microsoft.Database.Isam.Columnid,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.KeyColumn"/> class.
            </summary>
            <param name="columnid">The columnid.</param>
            <param name="isAscending">if set to <c>true</c> [is ascending].</param>
        </member>
        <member name="M:Microsoft.Database.Isam.KeyColumn.CheckReadOnly">
            <summary>
            Checks the read only.
            </summary>
            <exception cref="T:System.NotSupportedException">this key column definition cannot be changed</exception>
        </member>
        <member name="P:Microsoft.Database.Isam.KeyColumn.Columnid">
            <summary>
            Gets the column ID of the column used for this key column.
            </summary>
            <remarks>
            The column ID is undefined if this key column will be used to
            define a new index
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.KeyColumn.Name">
            <summary>
            Gets or sets the name of the column used for this key column.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.KeyColumn.Type">
            <summary>
            Gets the type of the column used for this key column.
            </summary>
            <remarks>
            The column type is undefined if this key column will be used to
            define a new index.
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.KeyColumn.IsAscending">
            <summary>
            Gets or sets a value indicating whether the sort order of the key column is ascending.
            </summary>
            <value>
              <c>true</c> if [is ascending]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.KeyColumn.IsReadOnly">
            <summary>
            Gets a value indicating whether [is read only].
            </summary>
            <value>
              <c>true</c> if [is read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.KeyColumn.ReadOnly">
            <summary>
            Sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Microsoft.Database.Isam.KeyColumnCollection">
            <summary>
            A class used by <see cref="T:Microsoft.Database.Isam.IndexDefinition"/> to represent which
            columns are used by a particular index.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.KeyColumnCollection.readOnly">
            <summary>
            The read only
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.KeyColumnCollection.Add(Microsoft.Database.Isam.KeyColumn)">
            <summary>
            Adds the specified key column.
            </summary>
            <param name="keyColumn">The key column.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.KeyColumnCollection.IndexOf(Microsoft.Database.Isam.KeyColumn)">
            <summary>
            Gets the index of the specified <see cref="T:Microsoft.Database.Isam.KeyColumn"/>.
            </summary>
            <param name="keyColumn">The key column.</param>
            <returns>An index to be used.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.KeyColumnCollection.Insert(System.Int32,Microsoft.Database.Isam.KeyColumn)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="keyColumn">The key column.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.KeyColumnCollection.Remove(Microsoft.Database.Isam.KeyColumn)">
            <summary>
            Removes the specified key column.
            </summary>
            <param name="keyColumn">The key column.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.KeyColumnCollection.Contains(Microsoft.Database.Isam.KeyColumn)">
            <summary>
            Determines whether the specified <see cref="T:Microsoft.Database.Isam.KeyColumn"/> is present in this collection.
            </summary>
            <param name="keyColumn">The key column.</param>
            <returns>Whether the specified <see cref="T:Microsoft.Database.Isam.KeyColumn"/> is present in this collection.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.KeyColumnCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.KeyColumnCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which to insert <paramref name="value" />.</param>
            <param name="value">The new value of the element at <paramref name="index" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.KeyColumnCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes when removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
            <param name="value">The value of the element to remove from <paramref name="index" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.KeyColumnCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="oldValue" /> can be found.</param>
            <param name="oldValue">The value to replace with <paramref name="newValue" />.</param>
            <param name="newValue">The new value of the element at <paramref name="index" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.KeyColumnCollection.OnValidate(System.Object)">
            <summary>
            Performs additional custom processes when validating a value.
            </summary>
            <param name="value">The object to validate.</param>
            <exception cref="T:System.ArgumentException">value must be of type KeyColumn;value</exception>
        </member>
        <member name="M:Microsoft.Database.Isam.KeyColumnCollection.CheckReadOnly">
            <summary>
            Checks the read only.
            </summary>
            <exception cref="T:System.NotSupportedException">this key column collection cannot be changed</exception>
        </member>
        <member name="P:Microsoft.Database.Isam.KeyColumnCollection.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the collection is Read-Only.
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.KeyColumnCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="T:Microsoft.Database.Isam.KeySegment">
            <summary>
            A key is composed of a collection of key segments.  Each key segment
            describes the value of a corresponding key column in an index.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.KeySegment.value">
            <summary>
            The value
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.KeySegment.prefix">
            <summary>
            The prefix
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.KeySegment.wildcard">
            <summary>
            The wildcard
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.KeySegment.wildcardNext">
            <summary>
            Whether the next <see cref="T:Microsoft.Database.Isam.KeySegment"/> is a wildcard.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.KeySegment.#ctor(System.Object,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.KeySegment"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="prefix">if set to <c>true</c> [prefix].</param>
            <param name="wildcard">if set to <c>true</c> [wildcard].</param>
            <param name="wildcardNext">if set to <c>true</c> [wildcard next].</param>
        </member>
        <member name="M:Microsoft.Database.Isam.KeySegment.WildcardIsNext">
            <summary>
            Gets whether the next <see cref="T:Microsoft.Database.Isam.KeySegment"/> is a wildcard.
            </summary>
            <returns>
            Whether the next <see cref="T:Microsoft.Database.Isam.KeySegment"/> is a wildcard.
            </returns>
        </member>
        <member name="P:Microsoft.Database.Isam.KeySegment.Value">
            <summary>
            Gets the value of this key segment.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.KeySegment.Prefix">
            <summary>
            Gets a value indicating whether the value of
            this key segment can match any value of a corresponding key column
            in an index that starts with its value.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.KeySegment.Wildcard">
            <summary>
            Gets a value indicating whether the value of
            this key segment can match any value of a corresponding key column
            in an index.
            </summary>
        </member>
        <member name="T:Microsoft.Database.Isam.Location">
            <summary>
            A secondary/primary key location that precisely identifies a given record
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Location.indexName">
            <summary>
            The index name
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Location.primaryBookmark">
            <summary>
            The primary bookmark
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Location.secondaryBookmark">
            <summary>
            The secondary bookmark
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Location.#ctor(System.String,System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.Location"/> class.
            </summary>
            <param name="indexName">Name of the index.</param>
            <param name="primaryBookmark">The primary bookmark.</param>
            <param name="secondaryBookmark">The secondary bookmark.</param>
        </member>
        <member name="P:Microsoft.Database.Isam.Location.IndexName">
            <summary>
            Gets the name of the index.
            </summary>
            <value>
            The name of the index.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.Location.PrimaryBookmark">
            <summary>
            Gets the primary bookmark.
            </summary>
            <value>
            The primary bookmark.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.Location.SecondaryBookmark">
            <summary>
            Gets the secondary bookmark.
            </summary>
            <value>
            The secondary bookmark.
            </value>
        </member>
        <member name="T:Microsoft.Database.Isam.MatchCriteria">
            <summary>
            Choices for Cursor.FindRecords
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.MatchCriteria.EqualTo">
            <summary>
            The cursor will be positioned at the index entry closest to the
            start of the index that exactly matches the search key.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.MatchCriteria.LessThan">
            <summary>
            The cursor will be positioned at the index entry closest to the
            end of the index that is less than an index entry that would
            exactly match the search criteria.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.MatchCriteria.LessThanOrEqualTo">
            <summary>
            The cursor will be positioned at the index entry closest to the
            end of the index that is less than or equal to an index entry
            that would exactly match the search criteria.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.MatchCriteria.GreaterThanOrEqualTo">
            <summary>
            The cursor will be positioned at the index entry closest to the
            start of the index that is greater than or equal to an index
            entry that would exactly match the search criteria.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.MatchCriteria.GreaterThan">
            <summary>
            The cursor will be positioned at the index entry closest to the
            start of the index that is greater than an index entry that
            would exactly match the search criteria.
            </summary>
        </member>
        <member name="T:Microsoft.Database.Isam.Position">
            <summary>
            Describes an (approximate) ordinal position in a table
            </summary>
            <remarks>
            A Position can be viewed as a non-simplified fractional position
            </remarks>
        </member>
        <member name="F:Microsoft.Database.Isam.Position.entry">
            <summary>
            The entry
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.Position.totalEntries">
            <summary>
            The total entries
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.Position.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.Position"/> class.
            </summary>
            <param name="entry">The entry.</param>
            <param name="totalEntries">The total number of entries.</param>
        </member>
        <member name="P:Microsoft.Database.Isam.Position.Entry">
            <summary>
            Gets the position in the table.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.Position.TotalEntries">
            <summary>
            Gets the total number of records in the table.
            </summary>
        </member>
        <member name="T:Microsoft.Database.Isam.RecordEnumerator">
            <summary>
            Enumerates the fields for a given record.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.RecordEnumerator.enumerator">
            <summary>
            The enumerator
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.RecordEnumerator.#ctor(System.Collections.IDictionaryEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.RecordEnumerator"/> class.
            </summary>
            <param name="enumerator">The enumerator.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.RecordEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.RecordEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Microsoft.Database.Isam.RecordEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>The current element in the collection.</returns>
            <remarks>
            This is the type safe version that may not work in other CLR
            languages.
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.RecordEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>The current element in the collection.</returns>
            <remarks>
            This is the standard version that will work with other CLR
            languages.
            </remarks>
        </member>
        <member name="T:Microsoft.Database.Isam.IsamSession">
            <summary>
            A Session is the transactional context for the ISAM.  It can be used to
            begin, commit, or abort transactions that influence when changes made
            to databases are kept or discarded.
            <para>
            The session object currently also controls which databases can be
            accessed by the ISAM.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamSession.isamInstance">
            <summary>
            The instance
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamSession.sesid">
            <summary>
            The sesid
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamSession.cleanup">
            <summary>
            The cleanup
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamSession.disposed">
            <summary>
            The disposed
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamSession.temporaryDatabase">
            <summary>
            The temporary database
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamSession.transactionLevel">
            <summary>
            The transaction level
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamSession.transactionLevelID">
            <summary>
            The transaction level identifier
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.#ctor(Microsoft.Database.Isam.IsamInstance)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.IsamSession"/> class.
            </summary>
            <param name="isamInstance">The instance.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.Finalize">
            <summary>
            Finalizes an instance of the IsamSession class.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.CreateDatabase(System.String)">
            <summary>
            Creates a new database at the specified location
            </summary>
            <param name="databaseName">The file name (relative or absolute) at which the database will be created</param>
            <remarks>
            The new database will automatically be attached to the instance.
            See Session.AttachDatabase for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.AttachDatabase(System.String)">
            <summary>
            Attaches an existing database at the specified location
            </summary>
            <param name="databaseName">The file name (relative or absolute) at which the database will be attached</param>
            <remarks>
            Attaching a database to the instance enables that database to be
            opened for access.  When a database is attached, its file is
            opened and so must be available to be locked as required.  The
            file will be held open until the database is detached or until the
            instance is disposed.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.DetachDatabase(System.String)">
            <summary>
            Detaches an attached database at the specified location
            </summary>
            <param name="databaseName">The file name (relative or absolute) at which the database will be detached</param>
            <remarks>
            Detaching a database from the instance will close its file and
            will make it no longer possible to open that database.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.Exists(System.String)">
            <summary>
            Determines if there is a database at the specified location
            </summary>
            <param name="databaseName">The file name (relative or absolute) at which the database may exist</param>
            <returns>true if the database exists and is a valid database file, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.OpenDatabase(System.String)">
            <summary>
            Opens the database.
            </summary>
            <param name="databaseName">The file name (relative or absolute) at which the database will be opened</param>
            <returns>
            a Database object representing the database for this session
            </returns>
            <remarks>
            A database must first be attached (or created) before it can be
            opened successfully.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.OpenTemporaryDatabase">
            <summary>
            Opens the temporary database.
            </summary>
            <returns>
            A TemporaryDatabase object representing the temporary database for this session
            </returns>
            <remarks>
            Only one temporary database is supported per instance.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.BeginTransaction">
            <summary>
            Begins a new save point (level) for the current transaction on this
            session.  Any changes made to the database for this save point
            (level) may later be kept or discarded by committing or aborting the
            save point (level).
            </summary>
            <remarks>
            Currently, there is a limit to how many save points (levels) are
            supported by the ISAM.  Approximately seven save points (levels)
            are supported.  Some ISAM functions also use some of these so the
            effective limit will vary with circumstance.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.CommitTransaction">
            <summary>
            Commits the current save point (level) of the current transaction
            on this session.  All changes made to the database for this save
            point (level) will be kept.
            </summary>
            <remarks>
            <para>
            It is illegal to call this method when the session is not currently
            in a transaction.  Use Session.TransactionLevel to determine the
            current transaction state of a session.
            </para>
            <para>
            Changes made to the database will become permanent if and only if
            those changes are committed to save point (level) zero.
            </para>
            <para>
            A commit to save point (level) zero is guaranteed to be persisted
            to the database upon completion of this method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.CommitTransaction(System.Boolean)">
            <summary>
            Commits the current save point (level) of the current transaction
            on this session.  All changes made to the database for this save
            point (level) will be kept.
            </summary>
            <param name="durableCommit">
            When true, a commit to save point (level) zero is guaranteed to be
            persisted to the database upon completion of this method.
            </param>
            <remarks>
            <para>
            It is illegal to call this method when the session is not currently
            in a transaction.  Use Session.TransactionLevel to determine the
            current transaction state of a session.
            </para>
            <para>
            A commit to save point (level) zero is guaranteed to be persisted
            to the database upon completion of this method only if
            durableCommit is true.  If durableCommit is false then the changes
            will only be persisted to the database if their transaction log
            entries happen to be written to disk before a crash or if the
            database is shut down cleanly.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.RollbackTransaction">
            <summary>
            Aborts the current save point (level) of the current transaction on
            this session.  All changes made to the database for this save point
            (level) will be discarded.
            </summary>
            <remarks>
            It is illegal to call this method when the session is not currently
            in a transaction.  Use Session.TransactionLevel to determine the
            current transaction state of a session.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.AbortTransaction">
            <summary>
            Aborts the current save point (level) of the current transaction on
            this session.  All changes made to the database for this save point
            (level) will be discarded.
            </summary>
            <remarks>
            It is illegal to call this method when the session is not currently
            in a transaction.  Use Session.TransactionLevel to determine the
            current transaction state of a session.
            <para>
            Session.AbortTransaction is an alias for
            <see cref="M:Microsoft.Database.Isam.IsamSession.RollbackTransaction"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.TransactionLevelID(System.Int64)">
            <summary>Gets the Transaction ID at the specifed Transaction Level.
            </summary>
            <param name="level">The Transaction Level.</param>
            <returns>The Transaction ID at the specifed Transaction Level.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSession.CheckDisposed">
            <summary>
            Checks whether this object is disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">If the object has already been disposed.</exception>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSession.IsamInstance">
            <summary>
            Gets the instance that created this session.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSession.TransactionID">
            <summary>
            Gets the ID of the session's current transaction.
            </summary>
            <remarks>
            The transaction ID is incremented every time the session's current
            transaction save point (level) reaches zero such that the session
            is no longer considered to be in a transaction.
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSession.TransactionLevel">
            <summary>
            Gets the save point (level) of the session's current transaction.
            </summary>
            <remarks>
            Every time a new transaction is begun, the save point (level) of
            the session's current transaction is increased.  Every time a
            transaction is successfully committed or aborted, the save point
            (level) of the session's current transaction is decreased.  If the
            save point (level) of the session's current transaction is zero
            then the session is not considered to be in a transaction.
            However, individual operations performed using the session will
            still be in a transaction.
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSession.Sesid">
            <summary>
            Gets the sesid.
            </summary>
            <value>
            The sesid.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSession.Disposed">
            <summary>
            Gets or sets a value indicating whether [disposed].
            </summary>
            <value>
              <c>true</c> if [disposed]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Microsoft.Database.Isam.IsamSystemParameters">
            <summary>
            Properties for per-instance system parameters
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamSystemParameters.instance">
            <summary>
            The instance.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamSystemParameters.#ctor(Microsoft.Database.Isam.IsamInstance)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.IsamSystemParameters"/> class.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.SystemPath">
            <summary>
            Gets or sets system parameter which is a string.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.TempPath">
            <summary>
            Gets or sets system parameter which is a string.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.LogFilePath">
            <summary>
            Gets or sets system parameter which is a string.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.BaseName">
            <summary>
            Gets or sets system parameter which is a string.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.EventSource">
            <summary>
            Gets or sets system parameter which is a string.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.MaxSessions">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.MaxOpenTables">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.MaxCursors">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.MaxVerPages">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.MaxTemporaryTables">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.LogFileSize">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.LogBuffers">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.CircularLog">
            <summary>
            Gets or sets a value indicating whether the underlying system parameter is true.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.DbExtensionSize">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.PageTempDBMin">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.CacheSizeMax">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.CheckpointDepthMax">
            <summary>
            Gets or sets a system parameter which is an integer type (long).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.OutstandingIOMax">
            <summary>
            Gets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.StartFlushThreshold">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.StopFlushThreshold">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.Recovery">
            <summary>
            Gets or sets system parameter which is a string.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.EnableOnlineDefrag">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.CacheSize">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.EnableIndexChecking">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.EventSourceKey">
            <summary>
            Gets or sets system parameter which is a string.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.NoInformationEvent">
            <summary>
            Gets or sets a value indicating whether the underlying system parameter is true.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.EventLoggingLevel">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.DeleteOutOfRangeLogs">
            <summary>
            Gets or sets a value indicating whether the underlying system parameter is true.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.EnableIndexCleanup">
            <summary>
            Gets or sets a value indicating whether the underlying system parameter is true.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.CacheSizeMin">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.PreferredVerPages">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.DatabasePageSize">
            <summary>
            Gets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.CleanupMismatchedLogFiles">
            <summary>
            Gets or sets a value indicating whether the underlying system parameter is true.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.ExceptionAction">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.CreatePathIfNotExist">
            <summary>
            Gets or sets a value indicating whether the underlying system parameter is true.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.OneDatabasePerSession">
            <summary>
            Gets or sets a value indicating whether the underlying system parameter is true.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.MaxInstances">
            <summary>
            Gets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.VersionStoreTaskQueueMax">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.Configuration">
            <summary>
            Gets or sets a system parameter which is an integer type (int).
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamSystemParameters.KeyMost">
            <summary>
            Gets a system parameter which is an integer type (long).
            </summary>
        </member>
        <member name="T:Microsoft.Database.Isam.TableCollection">
            <summary>
            Manages a collection of tables for a database
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableCollection.database">
            <summary>
            The database
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableCollection.readOnly">
            <summary>
            The read only
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableCollection.cachedTableDefinition">
            <summary>
            The cached table definition
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableCollection.tableDefinition">
            <summary>
            The table definition
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableCollection.tableUpdateID">
            <summary>
            The table update identifier
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TableCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.TableCollection"/> class. 
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TableCollection.#ctor(Microsoft.Database.Isam.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.TableCollection"/> class.
            </summary>
            <param name="database">The database.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TableCollection.Contains(System.String)">
            <summary>
            Determines if the database contains a table with the given name
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns>Whether the named table exists in this database.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.TableCollection.GetEnumerator">
            <summary>
            Fetches an enumerator containing all the tables in this database.
            </summary>
            <returns>An enumerator containing all the tables in this database.</returns>
            <remarks>
            This is the type safe version that may not work in other CLR
            languages.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.TableCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Fetches an enumerator containing all the tables in this database
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <remarks>
            This is the standard version that will work with other CLR
            languages.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.TableCollection.Add(Microsoft.Database.Isam.TableDefinition)">
            <summary>
            Adds the specified table definition.
            </summary>
            <param name="tableDefinition">The table definition.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TableCollection.Remove(System.String)">
            <summary>
            Removes the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TableCollection.OnClear">
            <summary>
            Performs additional custom processes before clearing the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TableCollection.OnInsert(System.Object,System.Object)">
            <summary>
            Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
            <param name="key">The key of the element to insert.</param>
            <param name="value">The value of the element to insert.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TableCollection.OnRemove(System.Object,System.Object)">
            <summary>
            Performs additional custom processes before removing an element from the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <param name="value">The value of the element to remove.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TableCollection.OnSet(System.Object,System.Object,System.Object)">
            <summary>
            Performs additional custom processes before setting a value in the <see cref="T:System.Collections.DictionaryBase" /> instance.
            </summary>
            <param name="key">The key of the element to locate.</param>
            <param name="oldValue">The old value of the element associated with <paramref name="key" />.</param>
            <param name="newValue">The new value of the element associated with <paramref name="key" />.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TableCollection.OnValidate(System.Object,System.Object)">
            <summary>
            Performs additional custom processes when validating the element with the specified key and value.
            </summary>
            <param name="key">The key of the element to validate.</param>
            <param name="value">The value of the element to validate.</param>
            <exception cref="T:System.ArgumentException">
            key must be of type System.String;key
            or
            value must be of type TableDefinition;value
            or
            key must match value.Name;key
            </exception>
        </member>
        <member name="M:Microsoft.Database.Isam.TableCollection.CheckReadOnly">
            <summary>
            Checks the read only.
            </summary>
            <exception cref="T:System.NotSupportedException">this table collection cannot be changed</exception>
        </member>
        <member name="P:Microsoft.Database.Isam.TableCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object has a fixed size.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.TableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IDictionary" /> object is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.TableCollection.Names">
            <summary>
            Gets the names of the tables.
            </summary>
            <value>
            The names.
            </value>
            <exception cref="T:System.InvalidOperationException">the names of the tables in this table collection cannot be enumerated in this manner when accessing the table collection of a database</exception>
        </member>
        <member name="P:Microsoft.Database.Isam.TableCollection.Item(System.String)">
            <summary>
            Fetches the Table Definition for the specified table name
            </summary>
            <value>
            The <see cref="T:Microsoft.Database.Isam.TableDefinition"/>.
            </value>
            <param name="tableName">Name of the table.</param>
            <returns>A <see cref="T:Microsoft.Database.Isam.TableDefinition"/> object representing the specified table.</returns>
        </member>
        <member name="T:Microsoft.Database.Isam.TableDefinition">
            <summary>
            A Table Definition contains the schema for a single table.  It can be
            used to explore the schema for an existing table, modify the schema
            for an existing table, and to create the definition for a new table.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableDefinition.database">
            <summary>
            The database
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableDefinition.name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableDefinition.tableType">
            <summary>
            The table type
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableDefinition.columnCollection">
            <summary>
            The column collection
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableDefinition.indexCollection">
            <summary>
            The index collection
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TableDefinition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.TableDefinition"/> class. 
            For use when defining a new table.
            </summary>
            <param name="name">the name of the table to be defined</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TableDefinition.#ctor(System.String,Microsoft.Database.Isam.TableType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.TableDefinition"/> class.
            For use when defining a new table.
            </summary>
            <param name="name">the name of the table to be defined</param>
            <param name="tableType">Type of the table.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TableDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.TableDefinition"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TableDefinition.AddColumn(Microsoft.Database.Isam.ColumnDefinition)">
            <summary>
            Creates a single column with the specified definition in the table
            underlying this table definition
            </summary>
            <param name="columnDefinition">The column definition.</param>
            <returns>The <see cref="T:Microsoft.Database.Isam.Columnid"/> object corresponding to the
            newly-added column.</returns>
            <remarks>
            It is currently not possible to add an AutoIncrement column to a
            table that is being used by a Cursor.  All such Cursors must be
            disposed before the column can be successfully added.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.TableDefinition.DropColumn(System.String)">
            <summary>
            Deletes a single column from the table underlying this table
            definition
            </summary>
            <param name="columnName">Name of the column.</param>
            <remarks>
            It is not possible to delete a column that is currently referenced
            by an index over this table.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.TableDefinition.CreateIndex(Microsoft.Database.Isam.IndexDefinition)">
            <summary>
            Creates a single index with the specified definition in the table
            underlying this table definition
            </summary>
            <param name="indexDefinition">The index definition.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TableDefinition.DropIndex(System.String)">
            <summary>
            Deletes a single index from the table underlying this table
            </summary>
            <param name="name">The name.</param>
            <remarks>
            It is currently not possible to delete an index that is being used
            by a Cursor as its CurrentIndex.  All such Cursors must either be
            disposed or set to a different index before the index can be
            successfully deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.TableDefinition.Load(Microsoft.Database.Isam.Database,Microsoft.Isam.Esent.Interop.JET_OBJECTLIST)">
            <summary>
            Loads the specified table specified in the <see cref="T:Microsoft.Isam.Esent.Interop.JET_OBJECTLIST"/> object.
            </summary>
            <param name="database">The database.</param>
            <param name="objectList">The object list.</param>
            <returns>A <see cref="T:Microsoft.Database.Isam.TableDefinition"/> corresponding to the table specified in <paramref name="objectList"/>.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.TableDefinition.Load(Microsoft.Database.Isam.Database,System.String,Microsoft.Isam.Esent.Interop.JET_OBJECTINFO)">
            <summary>
            Loads the specified table specified in the <see cref="T:Microsoft.Isam.Esent.Interop.JET_OBJECTINFO"/> object.
            </summary>
            <param name="database">The database.</param>
            <param name="tableName">Name of the table.</param>
            <param name="objectInfo">The object information.</param>
            <returns>A <see cref="T:Microsoft.Database.Isam.TableDefinition"/> corresponding to the table specified in <paramref name="objectInfo"/>.</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.TableDefinition.Name">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.TableDefinition.Type">
            <summary>
            Gets the type of the table.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.TableDefinition.Columns">
            <summary>
            Gets a collection containing the table's columns.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.TableDefinition.Indices">
            <summary>
            Gets a collection containing the tables indices.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.TableDefinition.IsamSession">
            <summary>
            Gets the session.
            </summary>
            <value>
            The session.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.TableDefinition.Database">
            <summary>
            Gets the database.
            </summary>
            <value>
            The database.
            </value>
        </member>
        <member name="T:Microsoft.Database.Isam.TableEnumerator">
            <summary>
            Enumerates the tables in a given database.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableEnumerator.database">
            <summary>
            The database
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableEnumerator.enumerator">
            <summary>
            The enumerator
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableEnumerator.objectList">
            <summary>
            The object list
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableEnumerator.cleanup">
            <summary>
            The cleanup
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableEnumerator.moved">
            <summary>
            The moved
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableEnumerator.current">
            <summary>
            The current
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableEnumerator.tableDefinition">
            <summary>
            The table definition
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableEnumerator.tableUpdateID">
            <summary>
            The table update identifier
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TableEnumerator.#ctor(Microsoft.Database.Isam.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.TableEnumerator"/> class.
            </summary>
            <param name="database">The database.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TableEnumerator.#ctor(System.Collections.IDictionaryEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.TableEnumerator"/> class.
            </summary>
            <param name="enumerator">The enumerator.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TableEnumerator.Finalize">
            <summary>
            Finalizes an instance of the TableEnumerator class
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TableEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TableEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="M:Microsoft.Database.Isam.TableEnumerator.MoveNext_">
            <summary>
            Moves the next_.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.TableEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>The current element in the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            after last table in database
            or
            before first table in database
            </exception>
            <remarks>
            This is the type safe version that may not work in other CLR
            languages.
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.TableEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>The current element in the collection.</returns>
            <remarks>
            This is the standard version that will work with other CLR
            languages.
            </remarks>
        </member>
        <member name="T:Microsoft.Database.Isam.TableType">
            <summary>
            Table types enumeration
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableType.None">
            <summary>
            The empty value.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableType.Base">
            <summary>
            An ordinary database table.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableType.Sort">
            <summary>
            A temporary table that can only be used to sort rows.  A sort is used
            in two phases:  insert phase and extraction phase.  In the insert
            phase, rows can only be inserted into the table.  In the extraction
            phase, rows can only be extracted in order from first to last.  Once
            all rows have been extracted, the sort can only be dropped.  Temporary
            tables are volatile.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableType.PreSortTemporary">
            <summary>
            A temporary table that is initially created by using a sort.  This
            table is used in two phases:  insert phase and main phase.  In
            the insert phase, rows can only be inserted into the table.  When
            the insert phase is ended by performing any non-insert operation,
            the rows created during the insert phase are sorted and pushed into
            the temporary table.  The table then enters the main phase where any
            operation is allowed.  Temporary tables are volatile.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TableType.Temporary">
            <summary>
            An ordinary temporary table.  Any operation is allowed at any time.
            Temporary tables are volatile.
            </summary>
        </member>
        <member name="T:Microsoft.Database.Isam.TemporaryDatabase">
            <summary>
            A Database is a file used by the ISAM to store data. It is organized
            into tables which are in turn comprised of columns and indices and
            contain data in the form of records. The database's schema can be
            enumerated and manipulated by this object. Also, the database's
            tables can be opened for access by this object.
            <para>
            A <see cref="T:Microsoft.Database.Isam.TemporaryDatabase"/> is used to access the temporary database. There
            is one temporary database per instance and its location is configured
            by Instance.IsamSystemParameters.TempPath. The temporary database is used
            to store temporary tables.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TemporaryDatabase.tableCollection">
            <summary>
            The table collection
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TemporaryDatabase.tempTableHandleCollection">
            <summary>
            The temporary table handle collection
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TemporaryDatabase.cleanup">
            <summary>
            The cleanup
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TemporaryDatabase.disposed">
            <summary>
            The disposed
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TemporaryDatabase.#ctor(Microsoft.Database.Isam.IsamSession)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.TemporaryDatabase"/> class.
            </summary>
            <param name="isamSession">The session.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TemporaryDatabase.Finalize">
            <summary>
            Finalizes an instance of the TemporaryDatabase class
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TemporaryDatabase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TemporaryDatabase.CreateTable(Microsoft.Database.Isam.TableDefinition)">
            <summary>
            Creates a single table with the specified definition in the database
            </summary>
            <param name="tableDefinition">The table definition.</param>
            <exception cref="T:Microsoft.Isam.Esent.Interop.EsentTableDuplicateException">
            Thrown when the table definition overlaps with an already existing table.
            </exception>
            <exception cref="T:System.ArgumentException">A MaxKeyLength &gt; 255 is not supported for indices over a temporary table on this version of the database engine.;tableDefinition</exception>
        </member>
        <member name="M:Microsoft.Database.Isam.TemporaryDatabase.DropTable(System.String)">
            <summary>
            Deletes a single table in the database
            </summary>
            <param name="tableName">Name of the table.</param>
            <exception cref="T:Microsoft.Isam.Esent.Interop.EsentObjectNotFoundException">
            Thrown when the specified table can't be found.
            </exception>
            <exception cref="T:Microsoft.Isam.Esent.Interop.EsentTableInUseException">
            Thrown when the specified table still has cursors open.
            </exception>
            <remarks>
            It is currently not possible to delete a table that is being used
            by a Cursor.  All such Cursors must be disposed before the
            table can be successfully deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.TemporaryDatabase.Exists(System.String)">
            <summary>
            Determines if a given table exists in the database
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns>
            true if the table was found, false otherwise
            </returns>
        </member>
        <member name="M:Microsoft.Database.Isam.TemporaryDatabase.OpenCursor(System.String)">
            <summary>
            Opens a cursor over the specified table.
            </summary>
            <param name="tableName">the name of the table to be opened</param>
            <returns>a cursor over the specified table in this database</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.TemporaryDatabase.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TemporaryDatabase.ReleaseTempTable(System.String,System.Boolean)">
            <summary>
            Releases the temporary table.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="inInsertMode">if set to <c>true</c> [in insert mode].</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TemporaryDatabase.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TemporaryDatabase.MakeTableDefinitionToCache(Microsoft.Database.Isam.TableDefinition,Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE)">
            <summary>
            Creates a <see cref="T:Microsoft.Database.Isam.TableDefinition"/> object from a <see cref="T:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE"/>
            object, suitable for caching.
            </summary>
            <param name="tableDefinition">The table definition.</param>
            <param name="openTemporaryTable">The open temporary table.</param>
            <returns>A <see cref="T:Microsoft.Database.Isam.TableDefinition"/> object suitable for caching.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.TemporaryDatabase.MakeOpenTemporaryTable(Microsoft.Database.Isam.TableDefinition)">
            <summary>
            Makes the <see cref="T:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE"/> object to later open it.
            </summary>
            <param name="tableDefinition">The table definition.</param>
            <returns>The newly created <see cref="T:Microsoft.Isam.Esent.Interop.Vista.JET_OPENTEMPORARYTABLE"/> object.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.TemporaryDatabase.CheckDisposed">
            <summary>
            Checks whether this object is disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">If the object has already been disposed.</exception>
        </member>
        <member name="M:Microsoft.Database.Isam.TemporaryDatabase.ValidateTableDefinition(Microsoft.Database.Isam.TableDefinition)">
            <summary>
            Validates the table definition.
            </summary>
            <param name="tableDefinition">The table definition.</param>
            <exception cref="T:System.ArgumentException">
            Illegal name for a temporary table.;tableDefinition
            or
            Illegal TableType for a temporary table.;tableDefinition
            or
            Temporary tables must have at least one column.;tableDefinition
            or
            Illegal name for a column in a temporary table.;tableDefinition
            or
            Illegal ColumnFlags for a column in a temporary table.;tableDefinition
            or
            Default values are not supported for temporary table columns.;tableDefinition
            or
            Temporary tables of type TableType.Sort and TableType.PreSortTemporary must have an index defined.;tableDefinition
            or
            Temporary tables may only have a single index defined.;tableDefinition
            or
            Illegal name for an index in a temporary table.;tableDefinition
            or
            Illegal IndexFlags for an index in a temporary table.;tableDefinition
            or
            Illegal or unsupported MaxKeyLength for an index in a temporary table.;tableDefinition
            or
            No KeyColumns for an index in a temporary table.;tableDefinition
            or
            Too many KeyColumns for an index in a temporary table.;tableDefinition
            or
            A KeyColumn for an index in the temporary table refers to a column that doesn't exist.;tableDefinition
            or
            Conditional columns are not supported for temporary table indices.;tableDefinition
            or
            Temporary tables of type TableType.PreSortTemporary and TableType.Temporary must have a primary index defined.;tableDefinition
            </exception>
        </member>
        <member name="P:Microsoft.Database.Isam.TemporaryDatabase.Tables">
            <summary>
            Gets a collection of tables in the database.
            </summary>
            <returns>a collection of tables in the database</returns>
        </member>
        <member name="P:Microsoft.Database.Isam.TemporaryDatabase.Disposed">
            <summary>
            Gets or sets a value indicating whether [disposed].
            </summary>
            <value>
              <c>true</c> if [disposed]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.TemporaryDatabase.TempTableHandles">
            <summary>
            Gets the temporary table handles.
            </summary>
            <value>
            The temporary table handles.
            </value>
        </member>
        <member name="T:Microsoft.Database.Isam.TempTableHandle">
            <summary>
            A wrapper class around Temp Tables.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TempTableHandle.guid">
            <summary>
            The unique identifier
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TempTableHandle.name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TempTableHandle.sesid">
            <summary>
            The sesid
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TempTableHandle.tableid">
            <summary>
            The tableid
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TempTableHandle.inInsertMode">
            <summary>
            The in insert mode
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TempTableHandle.cursorCount">
            <summary>
            The cursor count
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TempTableHandle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.TempTableHandle"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TempTableHandle.#ctor(System.String,Microsoft.Isam.Esent.Interop.JET_SESID,Microsoft.Isam.Esent.Interop.JET_TABLEID,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.TempTableHandle"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="sesid">The sesid.</param>
            <param name="tableid">The tableid.</param>
            <param name="inInsertMode">if set to <c>true</c> [in insert mode].</param>
        </member>
        <member name="P:Microsoft.Database.Isam.TempTableHandle.Name">
            <summary>
            Gets the name of the table.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.TempTableHandle.Sesid">
            <summary>
            Gets the <see cref="T:Microsoft.Isam.Esent.Interop.JET_SESID"/> used to open and access the table.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.TempTableHandle.Handle">
            <summary>
            Gets the handle of the table.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.TempTableHandle.InInsertMode">
            <summary>
            Gets or sets a value indicating whether the table handle is in insert mode.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.TempTableHandle.CursorCount">
            <summary>
            Gets or sets the count of cursors open on this table.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.TempTableHandle.Guid">
            <summary>
            Gets the GUID of the table.
            </summary>
        </member>
        <member name="T:Microsoft.Database.Isam.TempTableHandleCollection">
            <summary>
            A class used to store the table handles in this database.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TempTableHandleCollection.isKeyGuid">
            <summary>
            The is key unique identifier
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TempTableHandleCollection.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.TempTableHandleCollection"/> class.
            </summary>
            <param name="useGuid">if set to <c>true</c> [use unique identifier].</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TempTableHandleCollection.GetEnumerator">
            <summary>
            Fetches an enumerator containing all the table handles in this database.
            </summary>
            <returns>An enumerator containing all the table handles in this database.</returns>
            <remarks>
            This is the type safe version that may not work in other CLR
            languages.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.TempTableHandleCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Fetches an enumerator containing all the tables in this database
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
            <remarks>
            This is the standard version that will work with other CLR
            languages.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.TempTableHandleCollection.Add(Microsoft.Database.Isam.TempTableHandle)">
            <summary>
            Adds the specified temporary table handle.
            </summary>
            <param name="tempTableHandle">The temporary table handle.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TempTableHandleCollection.Contains(System.String)">
            <summary>
            Determines if the database contains a table with the given name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns>Whether the database contains a table with the given name.</returns>
        </member>
        <member name="M:Microsoft.Database.Isam.TempTableHandleCollection.Remove(System.String)">
            <summary>
            Removes the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TempTableHandleCollection.OnValidate(System.Object,System.Object)">
            <summary>
            Performs additional custom processes when validating the element with the specified key and value.
            </summary>
            <param name="key">The key of the element to validate.</param>
            <param name="value">The value of the element to validate.</param>
            <exception cref="T:System.ArgumentException">
            key must be of type System.String;key
            or
            value must be of type TempTableHandle;value
            or
            key must match value.Guid.ToString();key
            or
            key must match value.Name;key
            </exception>
        </member>
        <member name="P:Microsoft.Database.Isam.TempTableHandleCollection.IsKeyGuid">
            <summary>
            Gets a value indicating whether [is key unique identifier].
            </summary>
            <value>
            <c>true</c> if [is key unique identifier]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.TempTableHandleCollection.Names">
            <summary>
            Gets the names.
            </summary>
            <value>
            The names.
            </value>
        </member>
        <member name="P:Microsoft.Database.Isam.TempTableHandleCollection.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Database.Isam.TempTableHandle"/> for the specified table name
            </summary>
            <value>
            The <see cref="T:Microsoft.Database.Isam.TempTableHandle"/>.
            </value>
            <param name="tableName">Name of the table to get or set.</param>
            <returns>A <see cref="T:Microsoft.Database.Isam.TempTableHandle"/> for the specified table name.</returns>
        </member>
        <member name="T:Microsoft.Database.Isam.TempTableHandleEnumerator">
            <summary>
            A class used to enumerate all the table handles in this database.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.TempTableHandleEnumerator.enumerator">
            <summary>
            The enumerator
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TempTableHandleEnumerator.#ctor(System.Collections.IDictionaryEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.TempTableHandleEnumerator"/> class.
            </summary>
            <param name="enumerator">The enumerator.</param>
        </member>
        <member name="M:Microsoft.Database.Isam.TempTableHandleEnumerator.Finalize">
            <summary>
            Finalizes an instance of the TempTableHandleEnumerator class
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TempTableHandleEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.TempTableHandleEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Microsoft.Database.Isam.TempTableHandleEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>The current element in the collection.</returns>
            <remarks>
            This is the type safe version that may not work in other CLR
            languages.
            </remarks>
        </member>
        <member name="P:Microsoft.Database.Isam.TempTableHandleEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>The current element in the collection.</returns>
            <remarks>
            This is the standard version that will work with other CLR
            languages.
            </remarks>
        </member>
        <member name="T:Microsoft.Database.Isam.IsamTransaction">
             <summary>
             A IsamTransaction object represents a single save point of a transaction
             that is begun on a Session object.  This object is not required to
             begin, commit, or abort a transaction as this can be done directly
             on the Session object.  However, this object is very useful for making
             convenient code constructs involving transactions with the "using"
             keyword in C# like this:
             <code>
                 using( IsamTransaction t = new IsamTransaction( session ) )
                 {
                     /* do some work */
            
                     /* save the work */
                     t.Commit();
                 }
             </code>
             </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamTransaction.isamSession">
            <summary>
            The session
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamTransaction.transactionLevel">
            <summary>
            The transaction level
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamTransaction.transactionLevelID">
            <summary>
            The transaction level identifier
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamTransaction.cleanup">
            <summary>
            The cleanup
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.IsamTransaction.disposed">
            <summary>
            The disposed
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamTransaction.#ctor(Microsoft.Database.Isam.IsamSession)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.IsamTransaction"/> class. 
            Begin a transaction on the given session.
            </summary>
            <param name="isamSession">
            The session we will use for the transaction.
            </param>
            <remarks>
            If this transaction is not committed before this object is disposed
            then the transaction will automatically be aborted.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamTransaction.#ctor(Microsoft.Database.Isam.IsamSession,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Database.Isam.IsamTransaction"/> class. 
            Joins the current transaction on the given session.  If the session
            is not currently in a transaction then a new transaction will be
            begun.
            </summary>
            <param name="isamSession">
            The session we will use for the transaction.
            </param>
            <param name="join">
            If true, the current transaction on the session will be joined.  If false or if there is no current transaction then a new transaction will be begun.
            </param>
            <remarks>
            If an existing transaction is joined, then committing or aborting
            this transaction will have no effect on the joined transaction.  If
            a new transaction was begun then these actions will work normally.
            <para>
            If this transaction is not committed before this object is disposed
            then the transaction will automatically be aborted.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamTransaction.Finalize">
            <summary>
            Finalizes an instance of the IsamTransaction class
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamTransaction.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamTransaction.Commit">
            <summary>
            Commits the save point (level) represented by this transaction on
            this session.  All changes made to the database for this save point
            (level) will be kept.
            </summary>
            <remarks>
            Changes made to the database will become permanent if and only if
            those changes are committed to save point (level) zero.
            <para>
            A commit to save point (level) zero is guaranteed to be persisted
            to the database upon completion of this method.
            </para>
            <para>
            The transaction object will be disposed as a side effect of this
            call.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamTransaction.Commit(System.Boolean)">
            <summary>
            Commits the save point (level) represented by this transaction on
            this session.  All changes made to the database for this save point
            (level) will be kept.
            </summary>
            <param name="durableCommit">When true, a commit to save point (level) zero is guaranteed to be persisted to the database upon completion of this method.</param>
            <remarks>
            Changes made to the database will become permanent if and only if
            those changes are committed to save point (level) zero.
            <para>
            A commit to save point (level) zero is guaranteed to be persisted
            to the database upon completion of this method only if
            durableCommit is true.  If durableCommit is false then the changes
            will only be persisted to the database if their transaction log
            entries happen to be written to disk before a crash or if the
            database is shut down cleanly.
            </para>
            <para>
            The transaction object will be disposed as a side effect of this
            call.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamTransaction.Rollback">
            <summary>
            Aborts the save point (level) represented by this transaction on
            this session.  All changes made to the database for this save point
            (level) will be discarded.
            </summary>
            <remarks>
            The transaction object will be disposed as a side effect of this
            call.
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamTransaction.Abort">
            <summary>
            Aborts the save point (level) represented by this transaction on
            this session.  All changes made to the database for this save point
            (level) will be discarded.
            </summary>
            <remarks>
            The transaction object will be disposed as a side effect of this
            call.
            <para>
            IsamTransaction.Abort is an alias for <see cref="M:Microsoft.Database.Isam.IsamTransaction.Rollback"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamTransaction.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamTransaction.CheckDisposed">
            <summary>
            Checks whether this object is disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">If the object has already been disposed.</exception>
        </member>
        <member name="M:Microsoft.Database.Isam.IsamTransaction.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamTransaction.TransactionLevel">
            <summary>
            Gets the save point (level) for this transaction.
            </summary>
        </member>
        <member name="P:Microsoft.Database.Isam.IsamTransaction.Disposed">
            <summary>
            Gets or sets a value indicating whether [disposed].
            </summary>
            <value>
              <c>true</c> if [disposed]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Microsoft.Database.Isam.UnicodeIndexFlags">
            <summary>
            Flags for unicode index creation
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.UnicodeIndexFlags.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.UnicodeIndexFlags.CaseInsensitive">
            <summary>
            Ignore case.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.UnicodeIndexFlags.AccentInsensitive">
            <summary>
            Ignore nonspacing chars.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.UnicodeIndexFlags.IgnoreSymbols">
            <summary>
            Ignore symbols.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.UnicodeIndexFlags.KanaInsensitive">
            <summary>
            Ignore kanatype.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.UnicodeIndexFlags.WidthInsensitive">
            <summary>
            Ignore width.
            </summary>
        </member>
        <member name="F:Microsoft.Database.Isam.UnicodeIndexFlags.StringSort">
            <summary>
            Treat punctuation the same as symbols.
            </summary>
        </member>
    </members>
</doc>
